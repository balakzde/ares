/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AngazmaOsobaVr;
import org.openapitools.client.model.ObecnyTextVr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * KonkursVrAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class KonkursVrAllOf {
  public static final String SERIALIZED_NAME_SPRAVCE = "spravce";
  @SerializedName(SERIALIZED_NAME_SPRAVCE)
  private List<AngazmaOsobaVr> spravce = null;

  public static final String SERIALIZED_NAME_TYP_KONKURSU = "typKonkursu";
  @SerializedName(SERIALIZED_NAME_TYP_KONKURSU)
  private String typKonkursu;

  public static final String SERIALIZED_NAME_DATUM_ROZHODNUTI_OS = "datumRozhodnutiOs";
  @SerializedName(SERIALIZED_NAME_DATUM_ROZHODNUTI_OS)
  private LocalDate datumRozhodnutiOs;

  public static final String SERIALIZED_NAME_DATUM_VYVESENI = "datumVyveseni";
  @SerializedName(SERIALIZED_NAME_DATUM_VYVESENI)
  private LocalDate datumVyveseni;

  public static final String SERIALIZED_NAME_SPIS_ZN_OS = "spisZnOs";
  @SerializedName(SERIALIZED_NAME_SPIS_ZN_OS)
  private String spisZnOs;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_ZRUSENI_KONKURSU = "zruseniKonkursu";
  @SerializedName(SERIALIZED_NAME_ZRUSENI_KONKURSU)
  private List<ObecnyTextVr> zruseniKonkursu = null;

  public KonkursVrAllOf() {
  }

  public KonkursVrAllOf spravce(List<AngazmaOsobaVr> spravce) {
    
    this.spravce = spravce;
    return this;
  }

  public KonkursVrAllOf addSpravceItem(AngazmaOsobaVr spravceItem) {
    if (this.spravce == null) {
      this.spravce = new ArrayList<>();
    }
    this.spravce.add(spravceItem);
    return this;
  }

   /**
   * Get spravce
   * @return spravce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AngazmaOsobaVr> getSpravce() {
    return spravce;
  }


  public void setSpravce(List<AngazmaOsobaVr> spravce) {
    this.spravce = spravce;
  }


  public KonkursVrAllOf typKonkursu(String typKonkursu) {
    
    this.typKonkursu = typKonkursu;
    return this;
  }

   /**
   * Typ konkursu - kód (ciselnikKod: TypKonkursu) 
   * @return typKonkursu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Typ konkursu - kód (ciselnikKod: TypKonkursu) ")

  public String getTypKonkursu() {
    return typKonkursu;
  }


  public void setTypKonkursu(String typKonkursu) {
    this.typKonkursu = typKonkursu;
  }


  public KonkursVrAllOf datumRozhodnutiOs(LocalDate datumRozhodnutiOs) {
    
    this.datumRozhodnutiOs = datumRozhodnutiOs;
    return this;
  }

   /**
   * Datum rozhodnutí okresního soudu
   * @return datumRozhodnutiOs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum rozhodnutí okresního soudu")

  public LocalDate getDatumRozhodnutiOs() {
    return datumRozhodnutiOs;
  }


  public void setDatumRozhodnutiOs(LocalDate datumRozhodnutiOs) {
    this.datumRozhodnutiOs = datumRozhodnutiOs;
  }


  public KonkursVrAllOf datumVyveseni(LocalDate datumVyveseni) {
    
    this.datumVyveseni = datumVyveseni;
    return this;
  }

   /**
   * Datum vyvěšení rozhodnutí
   * @return datumVyveseni
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum vyvěšení rozhodnutí")

  public LocalDate getDatumVyveseni() {
    return datumVyveseni;
  }


  public void setDatumVyveseni(LocalDate datumVyveseni) {
    this.datumVyveseni = datumVyveseni;
  }


  public KonkursVrAllOf spisZnOs(String spisZnOs) {
    
    this.spisZnOs = spisZnOs;
    return this;
  }

   /**
   * Get spisZnOs
   * @return spisZnOs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSpisZnOs() {
    return spisZnOs;
  }


  public void setSpisZnOs(String spisZnOs) {
    this.spisZnOs = spisZnOs;
  }


  public KonkursVrAllOf text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Vlastní informace o konkurzním řízení
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Vlastní informace o konkurzním řízení")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  public KonkursVrAllOf zruseniKonkursu(List<ObecnyTextVr> zruseniKonkursu) {
    
    this.zruseniKonkursu = zruseniKonkursu;
    return this;
  }

  public KonkursVrAllOf addZruseniKonkursuItem(ObecnyTextVr zruseniKonkursuItem) {
    if (this.zruseniKonkursu == null) {
      this.zruseniKonkursu = new ArrayList<>();
    }
    this.zruseniKonkursu.add(zruseniKonkursuItem);
    return this;
  }

   /**
   * Get zruseniKonkursu
   * @return zruseniKonkursu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getZruseniKonkursu() {
    return zruseniKonkursu;
  }


  public void setZruseniKonkursu(List<ObecnyTextVr> zruseniKonkursu) {
    this.zruseniKonkursu = zruseniKonkursu;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KonkursVrAllOf konkursVrAllOf = (KonkursVrAllOf) o;
    return Objects.equals(this.spravce, konkursVrAllOf.spravce) &&
        Objects.equals(this.typKonkursu, konkursVrAllOf.typKonkursu) &&
        Objects.equals(this.datumRozhodnutiOs, konkursVrAllOf.datumRozhodnutiOs) &&
        Objects.equals(this.datumVyveseni, konkursVrAllOf.datumVyveseni) &&
        Objects.equals(this.spisZnOs, konkursVrAllOf.spisZnOs) &&
        Objects.equals(this.text, konkursVrAllOf.text) &&
        Objects.equals(this.zruseniKonkursu, konkursVrAllOf.zruseniKonkursu);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spravce, typKonkursu, datumRozhodnutiOs, datumVyveseni, spisZnOs, text, zruseniKonkursu);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KonkursVrAllOf {\n");
    sb.append("    spravce: ").append(toIndentedString(spravce)).append("\n");
    sb.append("    typKonkursu: ").append(toIndentedString(typKonkursu)).append("\n");
    sb.append("    datumRozhodnutiOs: ").append(toIndentedString(datumRozhodnutiOs)).append("\n");
    sb.append("    datumVyveseni: ").append(toIndentedString(datumVyveseni)).append("\n");
    sb.append("    spisZnOs: ").append(toIndentedString(spisZnOs)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    zruseniKonkursu: ").append(toIndentedString(zruseniKonkursu)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("spravce");
    openapiFields.add("typKonkursu");
    openapiFields.add("datumRozhodnutiOs");
    openapiFields.add("datumVyveseni");
    openapiFields.add("spisZnOs");
    openapiFields.add("text");
    openapiFields.add("zruseniKonkursu");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KonkursVrAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (KonkursVrAllOf.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in KonkursVrAllOf is not found in the empty JSON string", KonkursVrAllOf.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KonkursVrAllOf.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KonkursVrAllOf` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("spravce") != null && !jsonObj.get("spravce").isJsonNull()) {
        JsonArray jsonArrayspravce = jsonObj.getAsJsonArray("spravce");
        if (jsonArrayspravce != null) {
          // ensure the json data is an array
          if (!jsonObj.get("spravce").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `spravce` to be an array in the JSON string but got `%s`", jsonObj.get("spravce").toString()));
          }

          // validate the optional field `spravce` (array)
          for (int i = 0; i < jsonArrayspravce.size(); i++) {
            AngazmaOsobaVr.validateJsonObject(jsonArrayspravce.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("typKonkursu") != null && !jsonObj.get("typKonkursu").isJsonNull()) && !jsonObj.get("typKonkursu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typKonkursu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typKonkursu").toString()));
      }
      if ((jsonObj.get("spisZnOs") != null && !jsonObj.get("spisZnOs").isJsonNull()) && !jsonObj.get("spisZnOs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spisZnOs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spisZnOs").toString()));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if (jsonObj.get("zruseniKonkursu") != null && !jsonObj.get("zruseniKonkursu").isJsonNull()) {
        JsonArray jsonArrayzruseniKonkursu = jsonObj.getAsJsonArray("zruseniKonkursu");
        if (jsonArrayzruseniKonkursu != null) {
          // ensure the json data is an array
          if (!jsonObj.get("zruseniKonkursu").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `zruseniKonkursu` to be an array in the JSON string but got `%s`", jsonObj.get("zruseniKonkursu").toString()));
          }

          // validate the optional field `zruseniKonkursu` (array)
          for (int i = 0; i < jsonArrayzruseniKonkursu.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArrayzruseniKonkursu.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KonkursVrAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KonkursVrAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KonkursVrAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KonkursVrAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<KonkursVrAllOf>() {
           @Override
           public void write(JsonWriter out, KonkursVrAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KonkursVrAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KonkursVrAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KonkursVrAllOf
  * @throws IOException if the JSON string is invalid with respect to KonkursVrAllOf
  */
  public static KonkursVrAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KonkursVrAllOf.class);
  }

 /**
  * Convert an instance of KonkursVrAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

