/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AdresaVr;
import org.openapitools.client.model.CinnostiVr;
import org.openapitools.client.model.DatumVr;
import org.openapitools.client.model.EmiseAkcieVr;
import org.openapitools.client.model.IcoVr;
import org.openapitools.client.model.KategorieZoVr;
import org.openapitools.client.model.ObchodniJmenoCiziVr;
import org.openapitools.client.model.ObchodniJmenoVr;
import org.openapitools.client.model.ObecnyTextVr;
import org.openapitools.client.model.PravniFormaVr;
import org.openapitools.client.model.SpisovaZnackaVr;
import org.openapitools.client.model.VkladVr;
import org.openapitools.client.model.ZakladniKapitalVr;
import org.openapitools.client.model.ZpusobRizeniVr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Detailní informace o ekonomickém subjektu - obecný předek
 */
@ApiModel(description = "Detailní informace o ekonomickém subjektu - obecný předek")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class ZaznamVrZaklad {
  public static final String SERIALIZED_NAME_AKCIE = "akcie";
  @SerializedName(SERIALIZED_NAME_AKCIE)
  private List<EmiseAkcieVr> akcie = null;

  public static final String SERIALIZED_NAME_REJSTRIK = "rejstrik";
  @SerializedName(SERIALIZED_NAME_REJSTRIK)
  private String rejstrik;

  public static final String SERIALIZED_NAME_PRIMARNI_ZAZNAM = "primarniZaznam";
  @SerializedName(SERIALIZED_NAME_PRIMARNI_ZAZNAM)
  private Boolean primarniZaznam;

  public static final String SERIALIZED_NAME_SPISOVA_ZNACKA = "spisovaZnacka";
  @SerializedName(SERIALIZED_NAME_SPISOVA_ZNACKA)
  private List<SpisovaZnackaVr> spisovaZnacka = null;

  public static final String SERIALIZED_NAME_ICO = "ico";
  @SerializedName(SERIALIZED_NAME_ICO)
  private List<IcoVr> ico = null;

  public static final String SERIALIZED_NAME_OBCHODNI_JMENO = "obchodniJmeno";
  @SerializedName(SERIALIZED_NAME_OBCHODNI_JMENO)
  private List<ObchodniJmenoVr> obchodniJmeno = null;

  public static final String SERIALIZED_NAME_VKLADY = "vklady";
  @SerializedName(SERIALIZED_NAME_VKLADY)
  private List<VkladVr> vklady = null;

  public static final String SERIALIZED_NAME_OBCHODNI_JMENO_CIZI = "obchodniJmenoCizi";
  @SerializedName(SERIALIZED_NAME_OBCHODNI_JMENO_CIZI)
  private List<ObchodniJmenoCiziVr> obchodniJmenoCizi = null;

  public static final String SERIALIZED_NAME_ZAKLADNI_KAPITAL = "zakladniKapital";
  @SerializedName(SERIALIZED_NAME_ZAKLADNI_KAPITAL)
  private List<ZakladniKapitalVr> zakladniKapital = null;

  public static final String SERIALIZED_NAME_PRAVNI_FORMA = "pravniForma";
  @SerializedName(SERIALIZED_NAME_PRAVNI_FORMA)
  private List<PravniFormaVr> pravniForma = null;

  public static final String SERIALIZED_NAME_FINANCNI_URAD = "financniUrad";
  @SerializedName(SERIALIZED_NAME_FINANCNI_URAD)
  private String financniUrad;

  public static final String SERIALIZED_NAME_ADRESY = "adresy";
  @SerializedName(SERIALIZED_NAME_ADRESY)
  private List<AdresaVr> adresy = null;

  public static final String SERIALIZED_NAME_OSTATNI_SKUTECNOSTI = "ostatniSkutecnosti";
  @SerializedName(SERIALIZED_NAME_OSTATNI_SKUTECNOSTI)
  private List<ObecnyTextVr> ostatniSkutecnosti = null;

  public static final String SERIALIZED_NAME_DATUM_AKTUALIZACE = "datumAktualizace";
  @SerializedName(SERIALIZED_NAME_DATUM_AKTUALIZACE)
  private LocalDate datumAktualizace;

  public static final String SERIALIZED_NAME_STAV_SUBJEKTU = "stavSubjektu";
  @SerializedName(SERIALIZED_NAME_STAV_SUBJEKTU)
  private String stavSubjektu;

  public static final String SERIALIZED_NAME_DATUM_VZNIKU = "datumVzniku";
  @SerializedName(SERIALIZED_NAME_DATUM_VZNIKU)
  private List<DatumVr> datumVzniku = null;

  public static final String SERIALIZED_NAME_DATUM_ZAPISU = "datumZapisu";
  @SerializedName(SERIALIZED_NAME_DATUM_ZAPISU)
  private LocalDate datumZapisu;

  public static final String SERIALIZED_NAME_DATUM_VYMAZU = "datumVymazu";
  @SerializedName(SERIALIZED_NAME_DATUM_VYMAZU)
  private LocalDate datumVymazu;

  public static final String SERIALIZED_NAME_ZPUSOB_RIZENI = "zpusobRizeni";
  @SerializedName(SERIALIZED_NAME_ZPUSOB_RIZENI)
  private List<ZpusobRizeniVr> zpusobRizeni = null;

  public static final String SERIALIZED_NAME_KATEGORIE_Z_O = "kategorieZO";
  @SerializedName(SERIALIZED_NAME_KATEGORIE_Z_O)
  private List<KategorieZoVr> kategorieZO = null;

  public static final String SERIALIZED_NAME_PRAVNI_DUVOD_VYMAZU = "pravniDuvodVymazu";
  @SerializedName(SERIALIZED_NAME_PRAVNI_DUVOD_VYMAZU)
  private List<ObecnyTextVr> pravniDuvodVymazu = null;

  public static final String SERIALIZED_NAME_CINNOSTI = "cinnosti";
  @SerializedName(SERIALIZED_NAME_CINNOSTI)
  private CinnostiVr cinnosti;

  public static final String SERIALIZED_NAME_NAZEV_NEJVYSSIHO_ORGANU = "nazevNejvyssihoOrganu";
  @SerializedName(SERIALIZED_NAME_NAZEV_NEJVYSSIHO_ORGANU)
  private List<ObecnyTextVr> nazevNejvyssihoOrganu = null;

  public static final String SERIALIZED_NAME_EXEKUCE = "exekuce";
  @SerializedName(SERIALIZED_NAME_EXEKUCE)
  private List<ObecnyTextVr> exekuce = null;

  public ZaznamVrZaklad() {
  }

  public ZaznamVrZaklad akcie(List<EmiseAkcieVr> akcie) {
    
    this.akcie = akcie;
    return this;
  }

  public ZaznamVrZaklad addAkcieItem(EmiseAkcieVr akcieItem) {
    if (this.akcie == null) {
      this.akcie = new ArrayList<>();
    }
    this.akcie.add(akcieItem);
    return this;
  }

   /**
   * Get akcie
   * @return akcie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmiseAkcieVr> getAkcie() {
    return akcie;
  }


  public void setAkcie(List<EmiseAkcieVr> akcie) {
    this.akcie = akcie;
  }


  public ZaznamVrZaklad rejstrik(String rejstrik) {
    
    this.rejstrik = rejstrik;
    return this;
  }

   /**
   * Typ veřejného rejstříku (VR) - kód (ciselnikKod: TypRejstriku ) 
   * @return rejstrik
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Typ veřejného rejstříku (VR) - kód (ciselnikKod: TypRejstriku ) ")

  public String getRejstrik() {
    return rejstrik;
  }


  public void setRejstrik(String rejstrik) {
    this.rejstrik = rejstrik;
  }


  public ZaznamVrZaklad primarniZaznam(Boolean primarniZaznam) {
    
    this.primarniZaznam = primarniZaznam;
    return this;
  }

   /**
   * Primární záznam
   * @return primarniZaznam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Primární záznam")

  public Boolean getPrimarniZaznam() {
    return primarniZaznam;
  }


  public void setPrimarniZaznam(Boolean primarniZaznam) {
    this.primarniZaznam = primarniZaznam;
  }


  public ZaznamVrZaklad spisovaZnacka(List<SpisovaZnackaVr> spisovaZnacka) {
    
    this.spisovaZnacka = spisovaZnacka;
    return this;
  }

  public ZaznamVrZaklad addSpisovaZnackaItem(SpisovaZnackaVr spisovaZnackaItem) {
    if (this.spisovaZnacka == null) {
      this.spisovaZnacka = new ArrayList<>();
    }
    this.spisovaZnacka.add(spisovaZnackaItem);
    return this;
  }

   /**
   * Get spisovaZnacka
   * @return spisovaZnacka
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SpisovaZnackaVr> getSpisovaZnacka() {
    return spisovaZnacka;
  }


  public void setSpisovaZnacka(List<SpisovaZnackaVr> spisovaZnacka) {
    this.spisovaZnacka = spisovaZnacka;
  }


  public ZaznamVrZaklad ico(List<IcoVr> ico) {
    
    this.ico = ico;
    return this;
  }

  public ZaznamVrZaklad addIcoItem(IcoVr icoItem) {
    if (this.ico == null) {
      this.ico = new ArrayList<>();
    }
    this.ico.add(icoItem);
    return this;
  }

   /**
   * Get ico
   * @return ico
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IcoVr> getIco() {
    return ico;
  }


  public void setIco(List<IcoVr> ico) {
    this.ico = ico;
  }


  public ZaznamVrZaklad obchodniJmeno(List<ObchodniJmenoVr> obchodniJmeno) {
    
    this.obchodniJmeno = obchodniJmeno;
    return this;
  }

  public ZaznamVrZaklad addObchodniJmenoItem(ObchodniJmenoVr obchodniJmenoItem) {
    if (this.obchodniJmeno == null) {
      this.obchodniJmeno = new ArrayList<>();
    }
    this.obchodniJmeno.add(obchodniJmenoItem);
    return this;
  }

   /**
   * Get obchodniJmeno
   * @return obchodniJmeno
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObchodniJmenoVr> getObchodniJmeno() {
    return obchodniJmeno;
  }


  public void setObchodniJmeno(List<ObchodniJmenoVr> obchodniJmeno) {
    this.obchodniJmeno = obchodniJmeno;
  }


  public ZaznamVrZaklad vklady(List<VkladVr> vklady) {
    
    this.vklady = vklady;
    return this;
  }

  public ZaznamVrZaklad addVkladyItem(VkladVr vkladyItem) {
    if (this.vklady == null) {
      this.vklady = new ArrayList<>();
    }
    this.vklady.add(vkladyItem);
    return this;
  }

   /**
   * Get vklady
   * @return vklady
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<VkladVr> getVklady() {
    return vklady;
  }


  public void setVklady(List<VkladVr> vklady) {
    this.vklady = vklady;
  }


  public ZaznamVrZaklad obchodniJmenoCizi(List<ObchodniJmenoCiziVr> obchodniJmenoCizi) {
    
    this.obchodniJmenoCizi = obchodniJmenoCizi;
    return this;
  }

  public ZaznamVrZaklad addObchodniJmenoCiziItem(ObchodniJmenoCiziVr obchodniJmenoCiziItem) {
    if (this.obchodniJmenoCizi == null) {
      this.obchodniJmenoCizi = new ArrayList<>();
    }
    this.obchodniJmenoCizi.add(obchodniJmenoCiziItem);
    return this;
  }

   /**
   * Get obchodniJmenoCizi
   * @return obchodniJmenoCizi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObchodniJmenoCiziVr> getObchodniJmenoCizi() {
    return obchodniJmenoCizi;
  }


  public void setObchodniJmenoCizi(List<ObchodniJmenoCiziVr> obchodniJmenoCizi) {
    this.obchodniJmenoCizi = obchodniJmenoCizi;
  }


  public ZaznamVrZaklad zakladniKapital(List<ZakladniKapitalVr> zakladniKapital) {
    
    this.zakladniKapital = zakladniKapital;
    return this;
  }

  public ZaznamVrZaklad addZakladniKapitalItem(ZakladniKapitalVr zakladniKapitalItem) {
    if (this.zakladniKapital == null) {
      this.zakladniKapital = new ArrayList<>();
    }
    this.zakladniKapital.add(zakladniKapitalItem);
    return this;
  }

   /**
   * Get zakladniKapital
   * @return zakladniKapital
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ZakladniKapitalVr> getZakladniKapital() {
    return zakladniKapital;
  }


  public void setZakladniKapital(List<ZakladniKapitalVr> zakladniKapital) {
    this.zakladniKapital = zakladniKapital;
  }


  public ZaznamVrZaklad pravniForma(List<PravniFormaVr> pravniForma) {
    
    this.pravniForma = pravniForma;
    return this;
  }

  public ZaznamVrZaklad addPravniFormaItem(PravniFormaVr pravniFormaItem) {
    if (this.pravniForma == null) {
      this.pravniForma = new ArrayList<>();
    }
    this.pravniForma.add(pravniFormaItem);
    return this;
  }

   /**
   * Get pravniForma
   * @return pravniForma
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PravniFormaVr> getPravniForma() {
    return pravniForma;
  }


  public void setPravniForma(List<PravniFormaVr> pravniForma) {
    this.pravniForma = pravniForma;
  }


  public ZaznamVrZaklad financniUrad(String financniUrad) {
    
    this.financniUrad = financniUrad;
    return this;
  }

   /**
   * Finanční úřad - kód (ciselnikKod: FinancniUrad, zdroj: ufo) 
   * @return financniUrad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Finanční úřad - kód (ciselnikKod: FinancniUrad, zdroj: ufo) ")

  public String getFinancniUrad() {
    return financniUrad;
  }


  public void setFinancniUrad(String financniUrad) {
    this.financniUrad = financniUrad;
  }


  public ZaznamVrZaklad adresy(List<AdresaVr> adresy) {
    
    this.adresy = adresy;
    return this;
  }

  public ZaznamVrZaklad addAdresyItem(AdresaVr adresyItem) {
    if (this.adresy == null) {
      this.adresy = new ArrayList<>();
    }
    this.adresy.add(adresyItem);
    return this;
  }

   /**
   * Get adresy
   * @return adresy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AdresaVr> getAdresy() {
    return adresy;
  }


  public void setAdresy(List<AdresaVr> adresy) {
    this.adresy = adresy;
  }


  public ZaznamVrZaklad ostatniSkutecnosti(List<ObecnyTextVr> ostatniSkutecnosti) {
    
    this.ostatniSkutecnosti = ostatniSkutecnosti;
    return this;
  }

  public ZaznamVrZaklad addOstatniSkutecnostiItem(ObecnyTextVr ostatniSkutecnostiItem) {
    if (this.ostatniSkutecnosti == null) {
      this.ostatniSkutecnosti = new ArrayList<>();
    }
    this.ostatniSkutecnosti.add(ostatniSkutecnostiItem);
    return this;
  }

   /**
   * Get ostatniSkutecnosti
   * @return ostatniSkutecnosti
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getOstatniSkutecnosti() {
    return ostatniSkutecnosti;
  }


  public void setOstatniSkutecnosti(List<ObecnyTextVr> ostatniSkutecnosti) {
    this.ostatniSkutecnosti = ostatniSkutecnosti;
  }


  public ZaznamVrZaklad datumAktualizace(LocalDate datumAktualizace) {
    
    this.datumAktualizace = datumAktualizace;
    return this;
  }

   /**
   * Datum aktualizace
   * @return datumAktualizace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum aktualizace")

  public LocalDate getDatumAktualizace() {
    return datumAktualizace;
  }


  public void setDatumAktualizace(LocalDate datumAktualizace) {
    this.datumAktualizace = datumAktualizace;
  }


  public ZaznamVrZaklad stavSubjektu(String stavSubjektu) {
    
    this.stavSubjektu = stavSubjektu;
    return this;
  }

   /**
   * Stav ekonomického subjektu v ARES - kód (ciselnikKod: StavZdroje, zdroj:com) 
   * @return stavSubjektu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu v ARES - kód (ciselnikKod: StavZdroje, zdroj:com) ")

  public String getStavSubjektu() {
    return stavSubjektu;
  }


  public void setStavSubjektu(String stavSubjektu) {
    this.stavSubjektu = stavSubjektu;
  }


  public ZaznamVrZaklad datumVzniku(List<DatumVr> datumVzniku) {
    
    this.datumVzniku = datumVzniku;
    return this;
  }

  public ZaznamVrZaklad addDatumVznikuItem(DatumVr datumVznikuItem) {
    if (this.datumVzniku == null) {
      this.datumVzniku = new ArrayList<>();
    }
    this.datumVzniku.add(datumVznikuItem);
    return this;
  }

   /**
   * Get datumVzniku
   * @return datumVzniku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DatumVr> getDatumVzniku() {
    return datumVzniku;
  }


  public void setDatumVzniku(List<DatumVr> datumVzniku) {
    this.datumVzniku = datumVzniku;
  }


  public ZaznamVrZaklad datumZapisu(LocalDate datumZapisu) {
    
    this.datumZapisu = datumZapisu;
    return this;
  }

   /**
   * Datum zápisu subjektu do VR
   * @return datumZapisu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum zápisu subjektu do VR")

  public LocalDate getDatumZapisu() {
    return datumZapisu;
  }


  public void setDatumZapisu(LocalDate datumZapisu) {
    this.datumZapisu = datumZapisu;
  }


  public ZaznamVrZaklad datumVymazu(LocalDate datumVymazu) {
    
    this.datumVymazu = datumVymazu;
    return this;
  }

   /**
   * Datum výmazu subjektu z VR
   * @return datumVymazu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum výmazu subjektu z VR")

  public LocalDate getDatumVymazu() {
    return datumVymazu;
  }


  public void setDatumVymazu(LocalDate datumVymazu) {
    this.datumVymazu = datumVymazu;
  }


  public ZaznamVrZaklad zpusobRizeni(List<ZpusobRizeniVr> zpusobRizeni) {
    
    this.zpusobRizeni = zpusobRizeni;
    return this;
  }

  public ZaznamVrZaklad addZpusobRizeniItem(ZpusobRizeniVr zpusobRizeniItem) {
    if (this.zpusobRizeni == null) {
      this.zpusobRizeni = new ArrayList<>();
    }
    this.zpusobRizeni.add(zpusobRizeniItem);
    return this;
  }

   /**
   * Get zpusobRizeni
   * @return zpusobRizeni
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ZpusobRizeniVr> getZpusobRizeni() {
    return zpusobRizeni;
  }


  public void setZpusobRizeni(List<ZpusobRizeniVr> zpusobRizeni) {
    this.zpusobRizeni = zpusobRizeni;
  }


  public ZaznamVrZaklad kategorieZO(List<KategorieZoVr> kategorieZO) {
    
    this.kategorieZO = kategorieZO;
    return this;
  }

  public ZaznamVrZaklad addKategorieZOItem(KategorieZoVr kategorieZOItem) {
    if (this.kategorieZO == null) {
      this.kategorieZO = new ArrayList<>();
    }
    this.kategorieZO.add(kategorieZOItem);
    return this;
  }

   /**
   * Get kategorieZO
   * @return kategorieZO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<KategorieZoVr> getKategorieZO() {
    return kategorieZO;
  }


  public void setKategorieZO(List<KategorieZoVr> kategorieZO) {
    this.kategorieZO = kategorieZO;
  }


  public ZaznamVrZaklad pravniDuvodVymazu(List<ObecnyTextVr> pravniDuvodVymazu) {
    
    this.pravniDuvodVymazu = pravniDuvodVymazu;
    return this;
  }

  public ZaznamVrZaklad addPravniDuvodVymazuItem(ObecnyTextVr pravniDuvodVymazuItem) {
    if (this.pravniDuvodVymazu == null) {
      this.pravniDuvodVymazu = new ArrayList<>();
    }
    this.pravniDuvodVymazu.add(pravniDuvodVymazuItem);
    return this;
  }

   /**
   * Get pravniDuvodVymazu
   * @return pravniDuvodVymazu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getPravniDuvodVymazu() {
    return pravniDuvodVymazu;
  }


  public void setPravniDuvodVymazu(List<ObecnyTextVr> pravniDuvodVymazu) {
    this.pravniDuvodVymazu = pravniDuvodVymazu;
  }


  public ZaznamVrZaklad cinnosti(CinnostiVr cinnosti) {
    
    this.cinnosti = cinnosti;
    return this;
  }

   /**
   * Get cinnosti
   * @return cinnosti
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CinnostiVr getCinnosti() {
    return cinnosti;
  }


  public void setCinnosti(CinnostiVr cinnosti) {
    this.cinnosti = cinnosti;
  }


  public ZaznamVrZaklad nazevNejvyssihoOrganu(List<ObecnyTextVr> nazevNejvyssihoOrganu) {
    
    this.nazevNejvyssihoOrganu = nazevNejvyssihoOrganu;
    return this;
  }

  public ZaznamVrZaklad addNazevNejvyssihoOrganuItem(ObecnyTextVr nazevNejvyssihoOrganuItem) {
    if (this.nazevNejvyssihoOrganu == null) {
      this.nazevNejvyssihoOrganu = new ArrayList<>();
    }
    this.nazevNejvyssihoOrganu.add(nazevNejvyssihoOrganuItem);
    return this;
  }

   /**
   * Get nazevNejvyssihoOrganu
   * @return nazevNejvyssihoOrganu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getNazevNejvyssihoOrganu() {
    return nazevNejvyssihoOrganu;
  }


  public void setNazevNejvyssihoOrganu(List<ObecnyTextVr> nazevNejvyssihoOrganu) {
    this.nazevNejvyssihoOrganu = nazevNejvyssihoOrganu;
  }


  public ZaznamVrZaklad exekuce(List<ObecnyTextVr> exekuce) {
    
    this.exekuce = exekuce;
    return this;
  }

  public ZaznamVrZaklad addExekuceItem(ObecnyTextVr exekuceItem) {
    if (this.exekuce == null) {
      this.exekuce = new ArrayList<>();
    }
    this.exekuce.add(exekuceItem);
    return this;
  }

   /**
   * Get exekuce
   * @return exekuce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getExekuce() {
    return exekuce;
  }


  public void setExekuce(List<ObecnyTextVr> exekuce) {
    this.exekuce = exekuce;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZaznamVrZaklad zaznamVrZaklad = (ZaznamVrZaklad) o;
    return Objects.equals(this.akcie, zaznamVrZaklad.akcie) &&
        Objects.equals(this.rejstrik, zaznamVrZaklad.rejstrik) &&
        Objects.equals(this.primarniZaznam, zaznamVrZaklad.primarniZaznam) &&
        Objects.equals(this.spisovaZnacka, zaznamVrZaklad.spisovaZnacka) &&
        Objects.equals(this.ico, zaznamVrZaklad.ico) &&
        Objects.equals(this.obchodniJmeno, zaznamVrZaklad.obchodniJmeno) &&
        Objects.equals(this.vklady, zaznamVrZaklad.vklady) &&
        Objects.equals(this.obchodniJmenoCizi, zaznamVrZaklad.obchodniJmenoCizi) &&
        Objects.equals(this.zakladniKapital, zaznamVrZaklad.zakladniKapital) &&
        Objects.equals(this.pravniForma, zaznamVrZaklad.pravniForma) &&
        Objects.equals(this.financniUrad, zaznamVrZaklad.financniUrad) &&
        Objects.equals(this.adresy, zaznamVrZaklad.adresy) &&
        Objects.equals(this.ostatniSkutecnosti, zaznamVrZaklad.ostatniSkutecnosti) &&
        Objects.equals(this.datumAktualizace, zaznamVrZaklad.datumAktualizace) &&
        Objects.equals(this.stavSubjektu, zaznamVrZaklad.stavSubjektu) &&
        Objects.equals(this.datumVzniku, zaznamVrZaklad.datumVzniku) &&
        Objects.equals(this.datumZapisu, zaznamVrZaklad.datumZapisu) &&
        Objects.equals(this.datumVymazu, zaznamVrZaklad.datumVymazu) &&
        Objects.equals(this.zpusobRizeni, zaznamVrZaklad.zpusobRizeni) &&
        Objects.equals(this.kategorieZO, zaznamVrZaklad.kategorieZO) &&
        Objects.equals(this.pravniDuvodVymazu, zaznamVrZaklad.pravniDuvodVymazu) &&
        Objects.equals(this.cinnosti, zaznamVrZaklad.cinnosti) &&
        Objects.equals(this.nazevNejvyssihoOrganu, zaznamVrZaklad.nazevNejvyssihoOrganu) &&
        Objects.equals(this.exekuce, zaznamVrZaklad.exekuce);
  }

  @Override
  public int hashCode() {
    return Objects.hash(akcie, rejstrik, primarniZaznam, spisovaZnacka, ico, obchodniJmeno, vklady, obchodniJmenoCizi, zakladniKapital, pravniForma, financniUrad, adresy, ostatniSkutecnosti, datumAktualizace, stavSubjektu, datumVzniku, datumZapisu, datumVymazu, zpusobRizeni, kategorieZO, pravniDuvodVymazu, cinnosti, nazevNejvyssihoOrganu, exekuce);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZaznamVrZaklad {\n");
    sb.append("    akcie: ").append(toIndentedString(akcie)).append("\n");
    sb.append("    rejstrik: ").append(toIndentedString(rejstrik)).append("\n");
    sb.append("    primarniZaznam: ").append(toIndentedString(primarniZaznam)).append("\n");
    sb.append("    spisovaZnacka: ").append(toIndentedString(spisovaZnacka)).append("\n");
    sb.append("    ico: ").append(toIndentedString(ico)).append("\n");
    sb.append("    obchodniJmeno: ").append(toIndentedString(obchodniJmeno)).append("\n");
    sb.append("    vklady: ").append(toIndentedString(vklady)).append("\n");
    sb.append("    obchodniJmenoCizi: ").append(toIndentedString(obchodniJmenoCizi)).append("\n");
    sb.append("    zakladniKapital: ").append(toIndentedString(zakladniKapital)).append("\n");
    sb.append("    pravniForma: ").append(toIndentedString(pravniForma)).append("\n");
    sb.append("    financniUrad: ").append(toIndentedString(financniUrad)).append("\n");
    sb.append("    adresy: ").append(toIndentedString(adresy)).append("\n");
    sb.append("    ostatniSkutecnosti: ").append(toIndentedString(ostatniSkutecnosti)).append("\n");
    sb.append("    datumAktualizace: ").append(toIndentedString(datumAktualizace)).append("\n");
    sb.append("    stavSubjektu: ").append(toIndentedString(stavSubjektu)).append("\n");
    sb.append("    datumVzniku: ").append(toIndentedString(datumVzniku)).append("\n");
    sb.append("    datumZapisu: ").append(toIndentedString(datumZapisu)).append("\n");
    sb.append("    datumVymazu: ").append(toIndentedString(datumVymazu)).append("\n");
    sb.append("    zpusobRizeni: ").append(toIndentedString(zpusobRizeni)).append("\n");
    sb.append("    kategorieZO: ").append(toIndentedString(kategorieZO)).append("\n");
    sb.append("    pravniDuvodVymazu: ").append(toIndentedString(pravniDuvodVymazu)).append("\n");
    sb.append("    cinnosti: ").append(toIndentedString(cinnosti)).append("\n");
    sb.append("    nazevNejvyssihoOrganu: ").append(toIndentedString(nazevNejvyssihoOrganu)).append("\n");
    sb.append("    exekuce: ").append(toIndentedString(exekuce)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("akcie");
    openapiFields.add("rejstrik");
    openapiFields.add("primarniZaznam");
    openapiFields.add("spisovaZnacka");
    openapiFields.add("ico");
    openapiFields.add("obchodniJmeno");
    openapiFields.add("vklady");
    openapiFields.add("obchodniJmenoCizi");
    openapiFields.add("zakladniKapital");
    openapiFields.add("pravniForma");
    openapiFields.add("financniUrad");
    openapiFields.add("adresy");
    openapiFields.add("ostatniSkutecnosti");
    openapiFields.add("datumAktualizace");
    openapiFields.add("stavSubjektu");
    openapiFields.add("datumVzniku");
    openapiFields.add("datumZapisu");
    openapiFields.add("datumVymazu");
    openapiFields.add("zpusobRizeni");
    openapiFields.add("kategorieZO");
    openapiFields.add("pravniDuvodVymazu");
    openapiFields.add("cinnosti");
    openapiFields.add("nazevNejvyssihoOrganu");
    openapiFields.add("exekuce");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ZaznamVrZaklad
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ZaznamVrZaklad.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ZaznamVrZaklad is not found in the empty JSON string", ZaznamVrZaklad.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ZaznamVrZaklad.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ZaznamVrZaklad` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("akcie") != null && !jsonObj.get("akcie").isJsonNull()) {
        JsonArray jsonArrayakcie = jsonObj.getAsJsonArray("akcie");
        if (jsonArrayakcie != null) {
          // ensure the json data is an array
          if (!jsonObj.get("akcie").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `akcie` to be an array in the JSON string but got `%s`", jsonObj.get("akcie").toString()));
          }

          // validate the optional field `akcie` (array)
          for (int i = 0; i < jsonArrayakcie.size(); i++) {
            EmiseAkcieVr.validateJsonObject(jsonArrayakcie.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("rejstrik") != null && !jsonObj.get("rejstrik").isJsonNull()) && !jsonObj.get("rejstrik").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rejstrik` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rejstrik").toString()));
      }
      if (jsonObj.get("spisovaZnacka") != null && !jsonObj.get("spisovaZnacka").isJsonNull()) {
        JsonArray jsonArrayspisovaZnacka = jsonObj.getAsJsonArray("spisovaZnacka");
        if (jsonArrayspisovaZnacka != null) {
          // ensure the json data is an array
          if (!jsonObj.get("spisovaZnacka").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `spisovaZnacka` to be an array in the JSON string but got `%s`", jsonObj.get("spisovaZnacka").toString()));
          }

          // validate the optional field `spisovaZnacka` (array)
          for (int i = 0; i < jsonArrayspisovaZnacka.size(); i++) {
            SpisovaZnackaVr.validateJsonObject(jsonArrayspisovaZnacka.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("ico") != null && !jsonObj.get("ico").isJsonNull()) {
        JsonArray jsonArrayico = jsonObj.getAsJsonArray("ico");
        if (jsonArrayico != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ico").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ico` to be an array in the JSON string but got `%s`", jsonObj.get("ico").toString()));
          }

          // validate the optional field `ico` (array)
          for (int i = 0; i < jsonArrayico.size(); i++) {
            IcoVr.validateJsonObject(jsonArrayico.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("obchodniJmeno") != null && !jsonObj.get("obchodniJmeno").isJsonNull()) {
        JsonArray jsonArrayobchodniJmeno = jsonObj.getAsJsonArray("obchodniJmeno");
        if (jsonArrayobchodniJmeno != null) {
          // ensure the json data is an array
          if (!jsonObj.get("obchodniJmeno").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `obchodniJmeno` to be an array in the JSON string but got `%s`", jsonObj.get("obchodniJmeno").toString()));
          }

          // validate the optional field `obchodniJmeno` (array)
          for (int i = 0; i < jsonArrayobchodniJmeno.size(); i++) {
            ObchodniJmenoVr.validateJsonObject(jsonArrayobchodniJmeno.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("vklady") != null && !jsonObj.get("vklady").isJsonNull()) {
        JsonArray jsonArrayvklady = jsonObj.getAsJsonArray("vklady");
        if (jsonArrayvklady != null) {
          // ensure the json data is an array
          if (!jsonObj.get("vklady").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `vklady` to be an array in the JSON string but got `%s`", jsonObj.get("vklady").toString()));
          }

          // validate the optional field `vklady` (array)
          for (int i = 0; i < jsonArrayvklady.size(); i++) {
            VkladVr.validateJsonObject(jsonArrayvklady.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("obchodniJmenoCizi") != null && !jsonObj.get("obchodniJmenoCizi").isJsonNull()) {
        JsonArray jsonArrayobchodniJmenoCizi = jsonObj.getAsJsonArray("obchodniJmenoCizi");
        if (jsonArrayobchodniJmenoCizi != null) {
          // ensure the json data is an array
          if (!jsonObj.get("obchodniJmenoCizi").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `obchodniJmenoCizi` to be an array in the JSON string but got `%s`", jsonObj.get("obchodniJmenoCizi").toString()));
          }

          // validate the optional field `obchodniJmenoCizi` (array)
          for (int i = 0; i < jsonArrayobchodniJmenoCizi.size(); i++) {
            ObchodniJmenoCiziVr.validateJsonObject(jsonArrayobchodniJmenoCizi.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("zakladniKapital") != null && !jsonObj.get("zakladniKapital").isJsonNull()) {
        JsonArray jsonArrayzakladniKapital = jsonObj.getAsJsonArray("zakladniKapital");
        if (jsonArrayzakladniKapital != null) {
          // ensure the json data is an array
          if (!jsonObj.get("zakladniKapital").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `zakladniKapital` to be an array in the JSON string but got `%s`", jsonObj.get("zakladniKapital").toString()));
          }

          // validate the optional field `zakladniKapital` (array)
          for (int i = 0; i < jsonArrayzakladniKapital.size(); i++) {
            ZakladniKapitalVr.validateJsonObject(jsonArrayzakladniKapital.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("pravniForma") != null && !jsonObj.get("pravniForma").isJsonNull()) {
        JsonArray jsonArraypravniForma = jsonObj.getAsJsonArray("pravniForma");
        if (jsonArraypravniForma != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pravniForma").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pravniForma` to be an array in the JSON string but got `%s`", jsonObj.get("pravniForma").toString()));
          }

          // validate the optional field `pravniForma` (array)
          for (int i = 0; i < jsonArraypravniForma.size(); i++) {
            PravniFormaVr.validateJsonObject(jsonArraypravniForma.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("financniUrad") != null && !jsonObj.get("financniUrad").isJsonNull()) && !jsonObj.get("financniUrad").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `financniUrad` to be a primitive type in the JSON string but got `%s`", jsonObj.get("financniUrad").toString()));
      }
      if (jsonObj.get("adresy") != null && !jsonObj.get("adresy").isJsonNull()) {
        JsonArray jsonArrayadresy = jsonObj.getAsJsonArray("adresy");
        if (jsonArrayadresy != null) {
          // ensure the json data is an array
          if (!jsonObj.get("adresy").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `adresy` to be an array in the JSON string but got `%s`", jsonObj.get("adresy").toString()));
          }

          // validate the optional field `adresy` (array)
          for (int i = 0; i < jsonArrayadresy.size(); i++) {
            AdresaVr.validateJsonObject(jsonArrayadresy.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("ostatniSkutecnosti") != null && !jsonObj.get("ostatniSkutecnosti").isJsonNull()) {
        JsonArray jsonArrayostatniSkutecnosti = jsonObj.getAsJsonArray("ostatniSkutecnosti");
        if (jsonArrayostatniSkutecnosti != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ostatniSkutecnosti").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ostatniSkutecnosti` to be an array in the JSON string but got `%s`", jsonObj.get("ostatniSkutecnosti").toString()));
          }

          // validate the optional field `ostatniSkutecnosti` (array)
          for (int i = 0; i < jsonArrayostatniSkutecnosti.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArrayostatniSkutecnosti.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("stavSubjektu") != null && !jsonObj.get("stavSubjektu").isJsonNull()) && !jsonObj.get("stavSubjektu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavSubjektu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavSubjektu").toString()));
      }
      if (jsonObj.get("datumVzniku") != null && !jsonObj.get("datumVzniku").isJsonNull()) {
        JsonArray jsonArraydatumVzniku = jsonObj.getAsJsonArray("datumVzniku");
        if (jsonArraydatumVzniku != null) {
          // ensure the json data is an array
          if (!jsonObj.get("datumVzniku").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `datumVzniku` to be an array in the JSON string but got `%s`", jsonObj.get("datumVzniku").toString()));
          }

          // validate the optional field `datumVzniku` (array)
          for (int i = 0; i < jsonArraydatumVzniku.size(); i++) {
            DatumVr.validateJsonObject(jsonArraydatumVzniku.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("zpusobRizeni") != null && !jsonObj.get("zpusobRizeni").isJsonNull()) {
        JsonArray jsonArrayzpusobRizeni = jsonObj.getAsJsonArray("zpusobRizeni");
        if (jsonArrayzpusobRizeni != null) {
          // ensure the json data is an array
          if (!jsonObj.get("zpusobRizeni").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `zpusobRizeni` to be an array in the JSON string but got `%s`", jsonObj.get("zpusobRizeni").toString()));
          }

          // validate the optional field `zpusobRizeni` (array)
          for (int i = 0; i < jsonArrayzpusobRizeni.size(); i++) {
            ZpusobRizeniVr.validateJsonObject(jsonArrayzpusobRizeni.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("kategorieZO") != null && !jsonObj.get("kategorieZO").isJsonNull()) {
        JsonArray jsonArraykategorieZO = jsonObj.getAsJsonArray("kategorieZO");
        if (jsonArraykategorieZO != null) {
          // ensure the json data is an array
          if (!jsonObj.get("kategorieZO").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `kategorieZO` to be an array in the JSON string but got `%s`", jsonObj.get("kategorieZO").toString()));
          }

          // validate the optional field `kategorieZO` (array)
          for (int i = 0; i < jsonArraykategorieZO.size(); i++) {
            KategorieZoVr.validateJsonObject(jsonArraykategorieZO.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("pravniDuvodVymazu") != null && !jsonObj.get("pravniDuvodVymazu").isJsonNull()) {
        JsonArray jsonArraypravniDuvodVymazu = jsonObj.getAsJsonArray("pravniDuvodVymazu");
        if (jsonArraypravniDuvodVymazu != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pravniDuvodVymazu").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pravniDuvodVymazu` to be an array in the JSON string but got `%s`", jsonObj.get("pravniDuvodVymazu").toString()));
          }

          // validate the optional field `pravniDuvodVymazu` (array)
          for (int i = 0; i < jsonArraypravniDuvodVymazu.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArraypravniDuvodVymazu.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `cinnosti`
      if (jsonObj.get("cinnosti") != null && !jsonObj.get("cinnosti").isJsonNull()) {
        CinnostiVr.validateJsonObject(jsonObj.getAsJsonObject("cinnosti"));
      }
      if (jsonObj.get("nazevNejvyssihoOrganu") != null && !jsonObj.get("nazevNejvyssihoOrganu").isJsonNull()) {
        JsonArray jsonArraynazevNejvyssihoOrganu = jsonObj.getAsJsonArray("nazevNejvyssihoOrganu");
        if (jsonArraynazevNejvyssihoOrganu != null) {
          // ensure the json data is an array
          if (!jsonObj.get("nazevNejvyssihoOrganu").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `nazevNejvyssihoOrganu` to be an array in the JSON string but got `%s`", jsonObj.get("nazevNejvyssihoOrganu").toString()));
          }

          // validate the optional field `nazevNejvyssihoOrganu` (array)
          for (int i = 0; i < jsonArraynazevNejvyssihoOrganu.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArraynazevNejvyssihoOrganu.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("exekuce") != null && !jsonObj.get("exekuce").isJsonNull()) {
        JsonArray jsonArrayexekuce = jsonObj.getAsJsonArray("exekuce");
        if (jsonArrayexekuce != null) {
          // ensure the json data is an array
          if (!jsonObj.get("exekuce").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `exekuce` to be an array in the JSON string but got `%s`", jsonObj.get("exekuce").toString()));
          }

          // validate the optional field `exekuce` (array)
          for (int i = 0; i < jsonArrayexekuce.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArrayexekuce.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ZaznamVrZaklad.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ZaznamVrZaklad' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ZaznamVrZaklad> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ZaznamVrZaklad.class));

       return (TypeAdapter<T>) new TypeAdapter<ZaznamVrZaklad>() {
           @Override
           public void write(JsonWriter out, ZaznamVrZaklad value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ZaznamVrZaklad read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ZaznamVrZaklad given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ZaznamVrZaklad
  * @throws IOException if the JSON string is invalid with respect to ZaznamVrZaklad
  */
  public static ZaznamVrZaklad fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ZaznamVrZaklad.class);
  }

 /**
  * Convert an instance of ZaznamVrZaklad to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

