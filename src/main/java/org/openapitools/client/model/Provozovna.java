/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Adresa;
import org.openapitools.client.model.ZivnostOborCinnosti;
import org.openapitools.client.model.ZivnostProvozovnaPozastaveni;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provozovna
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class Provozovna {
  public static final String SERIALIZED_NAME_SIDLO_PROVOZOVNY = "sidloProvozovny";
  @SerializedName(SERIALIZED_NAME_SIDLO_PROVOZOVNY)
  private Adresa sidloProvozovny;

  public static final String SERIALIZED_NAME_UMISTENI_PROVOZOVNY = "umisteniProvozovny";
  @SerializedName(SERIALIZED_NAME_UMISTENI_PROVOZOVNY)
  private String umisteniProvozovny;

  public static final String SERIALIZED_NAME_PLATNOST_OD = "platnostOd";
  @SerializedName(SERIALIZED_NAME_PLATNOST_OD)
  private LocalDate platnostOd;

  public static final String SERIALIZED_NAME_PLATNOST_DO = "platnostDo";
  @SerializedName(SERIALIZED_NAME_PLATNOST_DO)
  private LocalDate platnostDo;

  public static final String SERIALIZED_NAME_POZASTAVENI_PROVOZOVNY = "pozastaveniProvozovny";
  @SerializedName(SERIALIZED_NAME_POZASTAVENI_PROVOZOVNY)
  private List<ZivnostProvozovnaPozastaveni> pozastaveniProvozovny = null;

  public static final String SERIALIZED_NAME_TYP_PROVOZOVNY = "typProvozovny";
  @SerializedName(SERIALIZED_NAME_TYP_PROVOZOVNY)
  private String typProvozovny;

  public static final String SERIALIZED_NAME_NAZEV = "nazev";
  @SerializedName(SERIALIZED_NAME_NAZEV)
  private String nazev;

  public static final String SERIALIZED_NAME_OBORY_CINNOSTI = "oboryCinnosti";
  @SerializedName(SERIALIZED_NAME_OBORY_CINNOSTI)
  private List<ZivnostOborCinnosti> oboryCinnosti = null;

  public Provozovna() {
  }

  public Provozovna sidloProvozovny(Adresa sidloProvozovny) {
    
    this.sidloProvozovny = sidloProvozovny;
    return this;
  }

   /**
   * Get sidloProvozovny
   * @return sidloProvozovny
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Adresa getSidloProvozovny() {
    return sidloProvozovny;
  }


  public void setSidloProvozovny(Adresa sidloProvozovny) {
    this.sidloProvozovny = sidloProvozovny;
  }


  public Provozovna umisteniProvozovny(String umisteniProvozovny) {
    
    this.umisteniProvozovny = umisteniProvozovny;
    return this;
  }

   /**
   * Umístění provozovny
   * @return umisteniProvozovny
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Umístění provozovny")

  public String getUmisteniProvozovny() {
    return umisteniProvozovny;
  }


  public void setUmisteniProvozovny(String umisteniProvozovny) {
    this.umisteniProvozovny = umisteniProvozovny;
  }


  public Provozovna platnostOd(LocalDate platnostOd) {
    
    this.platnostOd = platnostOd;
    return this;
  }

   /**
   * Platnost provozovny od data
   * @return platnostOd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Platnost provozovny od data")

  public LocalDate getPlatnostOd() {
    return platnostOd;
  }


  public void setPlatnostOd(LocalDate platnostOd) {
    this.platnostOd = platnostOd;
  }


  public Provozovna platnostDo(LocalDate platnostDo) {
    
    this.platnostDo = platnostDo;
    return this;
  }

   /**
   * Platnost provozovny do data 
   * @return platnostDo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Platnost provozovny do data ")

  public LocalDate getPlatnostDo() {
    return platnostDo;
  }


  public void setPlatnostDo(LocalDate platnostDo) {
    this.platnostDo = platnostDo;
  }


  public Provozovna pozastaveniProvozovny(List<ZivnostProvozovnaPozastaveni> pozastaveniProvozovny) {
    
    this.pozastaveniProvozovny = pozastaveniProvozovny;
    return this;
  }

  public Provozovna addPozastaveniProvozovnyItem(ZivnostProvozovnaPozastaveni pozastaveniProvozovnyItem) {
    if (this.pozastaveniProvozovny == null) {
      this.pozastaveniProvozovny = new ArrayList<>();
    }
    this.pozastaveniProvozovny.add(pozastaveniProvozovnyItem);
    return this;
  }

   /**
   * Get pozastaveniProvozovny
   * @return pozastaveniProvozovny
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ZivnostProvozovnaPozastaveni> getPozastaveniProvozovny() {
    return pozastaveniProvozovny;
  }


  public void setPozastaveniProvozovny(List<ZivnostProvozovnaPozastaveni> pozastaveniProvozovny) {
    this.pozastaveniProvozovny = pozastaveniProvozovny;
  }


  public Provozovna typProvozovny(String typProvozovny) {
    
    this.typProvozovny = typProvozovny;
    return this;
  }

   /**
   * Typ provozovny - kód (ciselnikKod: TypProvozovny) 
   * @return typProvozovny
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Typ provozovny - kód (ciselnikKod: TypProvozovny) ")

  public String getTypProvozovny() {
    return typProvozovny;
  }


  public void setTypProvozovny(String typProvozovny) {
    this.typProvozovny = typProvozovny;
  }


  public Provozovna nazev(String nazev) {
    
    this.nazev = nazev;
    return this;
  }

   /**
   * Název provozovny
   * @return nazev
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název provozovny")

  public String getNazev() {
    return nazev;
  }


  public void setNazev(String nazev) {
    this.nazev = nazev;
  }


  public Provozovna oboryCinnosti(List<ZivnostOborCinnosti> oboryCinnosti) {
    
    this.oboryCinnosti = oboryCinnosti;
    return this;
  }

  public Provozovna addOboryCinnostiItem(ZivnostOborCinnosti oboryCinnostiItem) {
    if (this.oboryCinnosti == null) {
      this.oboryCinnosti = new ArrayList<>();
    }
    this.oboryCinnosti.add(oboryCinnostiItem);
    return this;
  }

   /**
   * Get oboryCinnosti
   * @return oboryCinnosti
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ZivnostOborCinnosti> getOboryCinnosti() {
    return oboryCinnosti;
  }


  public void setOboryCinnosti(List<ZivnostOborCinnosti> oboryCinnosti) {
    this.oboryCinnosti = oboryCinnosti;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Provozovna provozovna = (Provozovna) o;
    return Objects.equals(this.sidloProvozovny, provozovna.sidloProvozovny) &&
        Objects.equals(this.umisteniProvozovny, provozovna.umisteniProvozovny) &&
        Objects.equals(this.platnostOd, provozovna.platnostOd) &&
        Objects.equals(this.platnostDo, provozovna.platnostDo) &&
        Objects.equals(this.pozastaveniProvozovny, provozovna.pozastaveniProvozovny) &&
        Objects.equals(this.typProvozovny, provozovna.typProvozovny) &&
        Objects.equals(this.nazev, provozovna.nazev) &&
        Objects.equals(this.oboryCinnosti, provozovna.oboryCinnosti);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sidloProvozovny, umisteniProvozovny, platnostOd, platnostDo, pozastaveniProvozovny, typProvozovny, nazev, oboryCinnosti);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Provozovna {\n");
    sb.append("    sidloProvozovny: ").append(toIndentedString(sidloProvozovny)).append("\n");
    sb.append("    umisteniProvozovny: ").append(toIndentedString(umisteniProvozovny)).append("\n");
    sb.append("    platnostOd: ").append(toIndentedString(platnostOd)).append("\n");
    sb.append("    platnostDo: ").append(toIndentedString(platnostDo)).append("\n");
    sb.append("    pozastaveniProvozovny: ").append(toIndentedString(pozastaveniProvozovny)).append("\n");
    sb.append("    typProvozovny: ").append(toIndentedString(typProvozovny)).append("\n");
    sb.append("    nazev: ").append(toIndentedString(nazev)).append("\n");
    sb.append("    oboryCinnosti: ").append(toIndentedString(oboryCinnosti)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sidloProvozovny");
    openapiFields.add("umisteniProvozovny");
    openapiFields.add("platnostOd");
    openapiFields.add("platnostDo");
    openapiFields.add("pozastaveniProvozovny");
    openapiFields.add("typProvozovny");
    openapiFields.add("nazev");
    openapiFields.add("oboryCinnosti");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Provozovna
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Provozovna.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Provozovna is not found in the empty JSON string", Provozovna.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Provozovna.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Provozovna` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `sidloProvozovny`
      if (jsonObj.get("sidloProvozovny") != null && !jsonObj.get("sidloProvozovny").isJsonNull()) {
        Adresa.validateJsonObject(jsonObj.getAsJsonObject("sidloProvozovny"));
      }
      if ((jsonObj.get("umisteniProvozovny") != null && !jsonObj.get("umisteniProvozovny").isJsonNull()) && !jsonObj.get("umisteniProvozovny").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `umisteniProvozovny` to be a primitive type in the JSON string but got `%s`", jsonObj.get("umisteniProvozovny").toString()));
      }
      if (jsonObj.get("pozastaveniProvozovny") != null && !jsonObj.get("pozastaveniProvozovny").isJsonNull()) {
        JsonArray jsonArraypozastaveniProvozovny = jsonObj.getAsJsonArray("pozastaveniProvozovny");
        if (jsonArraypozastaveniProvozovny != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pozastaveniProvozovny").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pozastaveniProvozovny` to be an array in the JSON string but got `%s`", jsonObj.get("pozastaveniProvozovny").toString()));
          }

          // validate the optional field `pozastaveniProvozovny` (array)
          for (int i = 0; i < jsonArraypozastaveniProvozovny.size(); i++) {
            ZivnostProvozovnaPozastaveni.validateJsonObject(jsonArraypozastaveniProvozovny.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("typProvozovny") != null && !jsonObj.get("typProvozovny").isJsonNull()) && !jsonObj.get("typProvozovny").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typProvozovny` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typProvozovny").toString()));
      }
      if ((jsonObj.get("nazev") != null && !jsonObj.get("nazev").isJsonNull()) && !jsonObj.get("nazev").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazev` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazev").toString()));
      }
      if (jsonObj.get("oboryCinnosti") != null && !jsonObj.get("oboryCinnosti").isJsonNull()) {
        JsonArray jsonArrayoboryCinnosti = jsonObj.getAsJsonArray("oboryCinnosti");
        if (jsonArrayoboryCinnosti != null) {
          // ensure the json data is an array
          if (!jsonObj.get("oboryCinnosti").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `oboryCinnosti` to be an array in the JSON string but got `%s`", jsonObj.get("oboryCinnosti").toString()));
          }

          // validate the optional field `oboryCinnosti` (array)
          for (int i = 0; i < jsonArrayoboryCinnosti.size(); i++) {
            ZivnostOborCinnosti.validateJsonObject(jsonArrayoboryCinnosti.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Provozovna.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Provozovna' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Provozovna> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Provozovna.class));

       return (TypeAdapter<T>) new TypeAdapter<Provozovna>() {
           @Override
           public void write(JsonWriter out, Provozovna value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Provozovna read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Provozovna given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Provozovna
  * @throws IOException if the JSON string is invalid with respect to Provozovna
  */
  public static Provozovna fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Provozovna.class);
  }

 /**
  * Convert an instance of Provozovna to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

