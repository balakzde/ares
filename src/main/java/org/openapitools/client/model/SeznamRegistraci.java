/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Seznam registrací ekonomického subjektu v jednotlivých zdrojích
 */
@ApiModel(description = "Seznam registrací ekonomického subjektu v jednotlivých zdrojích")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class SeznamRegistraci {
  public static final String SERIALIZED_NAME_STAV_ZDROJE_VR = "stavZdrojeVr";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_VR)
  private String stavZdrojeVr;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_RES = "stavZdrojeRes";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_RES)
  private String stavZdrojeRes;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_RZP = "stavZdrojeRzp";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_RZP)
  private String stavZdrojeRzp;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_NRPZS = "stavZdrojeNrpzs";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_NRPZS)
  private String stavZdrojeNrpzs;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_RPSH = "stavZdrojeRpsh";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_RPSH)
  private String stavZdrojeRpsh;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_RCNS = "stavZdrojeRcns";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_RCNS)
  private String stavZdrojeRcns;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_SZR = "stavZdrojeSzr";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_SZR)
  private String stavZdrojeSzr;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_DPH = "stavZdrojeDph";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_DPH)
  private String stavZdrojeDph;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_SD = "stavZdrojeSd";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_SD)
  private String stavZdrojeSd;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_IR = "stavZdrojeIr";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_IR)
  private String stavZdrojeIr;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_CEU = "stavZdrojeCeu";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_CEU)
  private String stavZdrojeCeu;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_RS = "stavZdrojeRs";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_RS)
  private String stavZdrojeRs;

  public static final String SERIALIZED_NAME_STAV_ZDROJE_RED = "stavZdrojeRed";
  @SerializedName(SERIALIZED_NAME_STAV_ZDROJE_RED)
  private String stavZdrojeRed;

  public SeznamRegistraci() {
  }

  public SeznamRegistraci stavZdrojeVr(String stavZdrojeVr) {
    
    this.stavZdrojeVr = stavZdrojeVr;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji VR (Veřejné rejstříky) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeVr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji VR (Veřejné rejstříky) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeVr() {
    return stavZdrojeVr;
  }


  public void setStavZdrojeVr(String stavZdrojeVr) {
    this.stavZdrojeVr = stavZdrojeVr;
  }


  public SeznamRegistraci stavZdrojeRes(String stavZdrojeRes) {
    
    this.stavZdrojeRes = stavZdrojeRes;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji RES (Registr ekonomických subjektů) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeRes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji RES (Registr ekonomických subjektů) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeRes() {
    return stavZdrojeRes;
  }


  public void setStavZdrojeRes(String stavZdrojeRes) {
    this.stavZdrojeRes = stavZdrojeRes;
  }


  public SeznamRegistraci stavZdrojeRzp(String stavZdrojeRzp) {
    
    this.stavZdrojeRzp = stavZdrojeRzp;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji RŽP (Registr živnostenského podnikání) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeRzp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji RŽP (Registr živnostenského podnikání) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeRzp() {
    return stavZdrojeRzp;
  }


  public void setStavZdrojeRzp(String stavZdrojeRzp) {
    this.stavZdrojeRzp = stavZdrojeRzp;
  }


  public SeznamRegistraci stavZdrojeNrpzs(String stavZdrojeNrpzs) {
    
    this.stavZdrojeNrpzs = stavZdrojeNrpzs;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji NRPZS (Národní registr poskytovatelů zdrovotnických služeb) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeNrpzs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji NRPZS (Národní registr poskytovatelů zdrovotnických služeb) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeNrpzs() {
    return stavZdrojeNrpzs;
  }


  public void setStavZdrojeNrpzs(String stavZdrojeNrpzs) {
    this.stavZdrojeNrpzs = stavZdrojeNrpzs;
  }


  public SeznamRegistraci stavZdrojeRpsh(String stavZdrojeRpsh) {
    
    this.stavZdrojeRpsh = stavZdrojeRpsh;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji RPSH (Registr politických stran a hnutí) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeRpsh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji RPSH (Registr politických stran a hnutí) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeRpsh() {
    return stavZdrojeRpsh;
  }


  public void setStavZdrojeRpsh(String stavZdrojeRpsh) {
    this.stavZdrojeRpsh = stavZdrojeRpsh;
  }


  public SeznamRegistraci stavZdrojeRcns(String stavZdrojeRcns) {
    
    this.stavZdrojeRcns = stavZdrojeRcns;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji RCNS(Registr církví a náboženských společenství) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeRcns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji RCNS(Registr církví a náboženských společenství) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeRcns() {
    return stavZdrojeRcns;
  }


  public void setStavZdrojeRcns(String stavZdrojeRcns) {
    this.stavZdrojeRcns = stavZdrojeRcns;
  }


  public SeznamRegistraci stavZdrojeSzr(String stavZdrojeSzr) {
    
    this.stavZdrojeSzr = stavZdrojeSzr;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji  SZR(Společný zemědělský registr) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeSzr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji  SZR(Společný zemědělský registr) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeSzr() {
    return stavZdrojeSzr;
  }


  public void setStavZdrojeSzr(String stavZdrojeSzr) {
    this.stavZdrojeSzr = stavZdrojeSzr;
  }


  public SeznamRegistraci stavZdrojeDph(String stavZdrojeDph) {
    
    this.stavZdrojeDph = stavZdrojeDph;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji DPH(Registr plátců daně s přidané hodnoty) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeDph
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji DPH(Registr plátců daně s přidané hodnoty) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeDph() {
    return stavZdrojeDph;
  }


  public void setStavZdrojeDph(String stavZdrojeDph) {
    this.stavZdrojeDph = stavZdrojeDph;
  }


  public SeznamRegistraci stavZdrojeSd(String stavZdrojeSd) {
    
    this.stavZdrojeSd = stavZdrojeSd;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji SD(Registr plátců spotřební daně) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeSd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji SD(Registr plátců spotřební daně) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeSd() {
    return stavZdrojeSd;
  }


  public void setStavZdrojeSd(String stavZdrojeSd) {
    this.stavZdrojeSd = stavZdrojeSd;
  }


  public SeznamRegistraci stavZdrojeIr(String stavZdrojeIr) {
    
    this.stavZdrojeIr = stavZdrojeIr;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji ISIR(Insolvenční rejstřík) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeIr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji ISIR(Insolvenční rejstřík) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeIr() {
    return stavZdrojeIr;
  }


  public void setStavZdrojeIr(String stavZdrojeIr) {
    this.stavZdrojeIr = stavZdrojeIr;
  }


  public SeznamRegistraci stavZdrojeCeu(String stavZdrojeCeu) {
    
    this.stavZdrojeCeu = stavZdrojeCeu;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji CEÚ(Centrální evidence úpadců) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeCeu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji CEÚ(Centrální evidence úpadců) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeCeu() {
    return stavZdrojeCeu;
  }


  public void setStavZdrojeCeu(String stavZdrojeCeu) {
    this.stavZdrojeCeu = stavZdrojeCeu;
  }


  public SeznamRegistraci stavZdrojeRs(String stavZdrojeRs) {
    
    this.stavZdrojeRs = stavZdrojeRs;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji RŠ(Registr škol) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeRs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji RŠ(Registr škol) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeRs() {
    return stavZdrojeRs;
  }


  public void setStavZdrojeRs(String stavZdrojeRs) {
    this.stavZdrojeRs = stavZdrojeRs;
  }


  public SeznamRegistraci stavZdrojeRed(String stavZdrojeRed) {
    
    this.stavZdrojeRed = stavZdrojeRed;
    return this;
  }

   /**
   * Stav ekonomického subjektu ve zdroji RED(Registr evidence dotací) - kód (ciselnikKod: StavZdroje, zdroj: com) 
   * @return stavZdrojeRed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav ekonomického subjektu ve zdroji RED(Registr evidence dotací) - kód (ciselnikKod: StavZdroje, zdroj: com) ")

  public String getStavZdrojeRed() {
    return stavZdrojeRed;
  }


  public void setStavZdrojeRed(String stavZdrojeRed) {
    this.stavZdrojeRed = stavZdrojeRed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeznamRegistraci seznamRegistraci = (SeznamRegistraci) o;
    return Objects.equals(this.stavZdrojeVr, seznamRegistraci.stavZdrojeVr) &&
        Objects.equals(this.stavZdrojeRes, seznamRegistraci.stavZdrojeRes) &&
        Objects.equals(this.stavZdrojeRzp, seznamRegistraci.stavZdrojeRzp) &&
        Objects.equals(this.stavZdrojeNrpzs, seznamRegistraci.stavZdrojeNrpzs) &&
        Objects.equals(this.stavZdrojeRpsh, seznamRegistraci.stavZdrojeRpsh) &&
        Objects.equals(this.stavZdrojeRcns, seznamRegistraci.stavZdrojeRcns) &&
        Objects.equals(this.stavZdrojeSzr, seznamRegistraci.stavZdrojeSzr) &&
        Objects.equals(this.stavZdrojeDph, seznamRegistraci.stavZdrojeDph) &&
        Objects.equals(this.stavZdrojeSd, seznamRegistraci.stavZdrojeSd) &&
        Objects.equals(this.stavZdrojeIr, seznamRegistraci.stavZdrojeIr) &&
        Objects.equals(this.stavZdrojeCeu, seznamRegistraci.stavZdrojeCeu) &&
        Objects.equals(this.stavZdrojeRs, seznamRegistraci.stavZdrojeRs) &&
        Objects.equals(this.stavZdrojeRed, seznamRegistraci.stavZdrojeRed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stavZdrojeVr, stavZdrojeRes, stavZdrojeRzp, stavZdrojeNrpzs, stavZdrojeRpsh, stavZdrojeRcns, stavZdrojeSzr, stavZdrojeDph, stavZdrojeSd, stavZdrojeIr, stavZdrojeCeu, stavZdrojeRs, stavZdrojeRed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeznamRegistraci {\n");
    sb.append("    stavZdrojeVr: ").append(toIndentedString(stavZdrojeVr)).append("\n");
    sb.append("    stavZdrojeRes: ").append(toIndentedString(stavZdrojeRes)).append("\n");
    sb.append("    stavZdrojeRzp: ").append(toIndentedString(stavZdrojeRzp)).append("\n");
    sb.append("    stavZdrojeNrpzs: ").append(toIndentedString(stavZdrojeNrpzs)).append("\n");
    sb.append("    stavZdrojeRpsh: ").append(toIndentedString(stavZdrojeRpsh)).append("\n");
    sb.append("    stavZdrojeRcns: ").append(toIndentedString(stavZdrojeRcns)).append("\n");
    sb.append("    stavZdrojeSzr: ").append(toIndentedString(stavZdrojeSzr)).append("\n");
    sb.append("    stavZdrojeDph: ").append(toIndentedString(stavZdrojeDph)).append("\n");
    sb.append("    stavZdrojeSd: ").append(toIndentedString(stavZdrojeSd)).append("\n");
    sb.append("    stavZdrojeIr: ").append(toIndentedString(stavZdrojeIr)).append("\n");
    sb.append("    stavZdrojeCeu: ").append(toIndentedString(stavZdrojeCeu)).append("\n");
    sb.append("    stavZdrojeRs: ").append(toIndentedString(stavZdrojeRs)).append("\n");
    sb.append("    stavZdrojeRed: ").append(toIndentedString(stavZdrojeRed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("stavZdrojeVr");
    openapiFields.add("stavZdrojeRes");
    openapiFields.add("stavZdrojeRzp");
    openapiFields.add("stavZdrojeNrpzs");
    openapiFields.add("stavZdrojeRpsh");
    openapiFields.add("stavZdrojeRcns");
    openapiFields.add("stavZdrojeSzr");
    openapiFields.add("stavZdrojeDph");
    openapiFields.add("stavZdrojeSd");
    openapiFields.add("stavZdrojeIr");
    openapiFields.add("stavZdrojeCeu");
    openapiFields.add("stavZdrojeRs");
    openapiFields.add("stavZdrojeRed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SeznamRegistraci
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SeznamRegistraci.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SeznamRegistraci is not found in the empty JSON string", SeznamRegistraci.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SeznamRegistraci.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SeznamRegistraci` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("stavZdrojeVr") != null && !jsonObj.get("stavZdrojeVr").isJsonNull()) && !jsonObj.get("stavZdrojeVr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeVr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeVr").toString()));
      }
      if ((jsonObj.get("stavZdrojeRes") != null && !jsonObj.get("stavZdrojeRes").isJsonNull()) && !jsonObj.get("stavZdrojeRes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeRes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeRes").toString()));
      }
      if ((jsonObj.get("stavZdrojeRzp") != null && !jsonObj.get("stavZdrojeRzp").isJsonNull()) && !jsonObj.get("stavZdrojeRzp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeRzp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeRzp").toString()));
      }
      if ((jsonObj.get("stavZdrojeNrpzs") != null && !jsonObj.get("stavZdrojeNrpzs").isJsonNull()) && !jsonObj.get("stavZdrojeNrpzs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeNrpzs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeNrpzs").toString()));
      }
      if ((jsonObj.get("stavZdrojeRpsh") != null && !jsonObj.get("stavZdrojeRpsh").isJsonNull()) && !jsonObj.get("stavZdrojeRpsh").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeRpsh` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeRpsh").toString()));
      }
      if ((jsonObj.get("stavZdrojeRcns") != null && !jsonObj.get("stavZdrojeRcns").isJsonNull()) && !jsonObj.get("stavZdrojeRcns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeRcns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeRcns").toString()));
      }
      if ((jsonObj.get("stavZdrojeSzr") != null && !jsonObj.get("stavZdrojeSzr").isJsonNull()) && !jsonObj.get("stavZdrojeSzr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeSzr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeSzr").toString()));
      }
      if ((jsonObj.get("stavZdrojeDph") != null && !jsonObj.get("stavZdrojeDph").isJsonNull()) && !jsonObj.get("stavZdrojeDph").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeDph` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeDph").toString()));
      }
      if ((jsonObj.get("stavZdrojeSd") != null && !jsonObj.get("stavZdrojeSd").isJsonNull()) && !jsonObj.get("stavZdrojeSd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeSd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeSd").toString()));
      }
      if ((jsonObj.get("stavZdrojeIr") != null && !jsonObj.get("stavZdrojeIr").isJsonNull()) && !jsonObj.get("stavZdrojeIr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeIr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeIr").toString()));
      }
      if ((jsonObj.get("stavZdrojeCeu") != null && !jsonObj.get("stavZdrojeCeu").isJsonNull()) && !jsonObj.get("stavZdrojeCeu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeCeu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeCeu").toString()));
      }
      if ((jsonObj.get("stavZdrojeRs") != null && !jsonObj.get("stavZdrojeRs").isJsonNull()) && !jsonObj.get("stavZdrojeRs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeRs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeRs").toString()));
      }
      if ((jsonObj.get("stavZdrojeRed") != null && !jsonObj.get("stavZdrojeRed").isJsonNull()) && !jsonObj.get("stavZdrojeRed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavZdrojeRed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavZdrojeRed").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SeznamRegistraci.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SeznamRegistraci' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SeznamRegistraci> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SeznamRegistraci.class));

       return (TypeAdapter<T>) new TypeAdapter<SeznamRegistraci>() {
           @Override
           public void write(JsonWriter out, SeznamRegistraci value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SeznamRegistraci read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SeznamRegistraci given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SeznamRegistraci
  * @throws IOException if the JSON string is invalid with respect to SeznamRegistraci
  */
  public static SeznamRegistraci fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SeznamRegistraci.class);
  }

 /**
  * Convert an instance of SeznamRegistraci to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

