/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AdresaVr;
import org.openapitools.client.model.AngazmaOsobaVr;
import org.openapitools.client.model.CinnostiVr;
import org.openapitools.client.model.IcoVr;
import org.openapitools.client.model.ObchodniJmenoVr;
import org.openapitools.client.model.ObecnyTextVr;
import org.openapitools.client.model.PravniFormaVr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OdstepnyZavodVrAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class OdstepnyZavodVrAllOf {
  public static final String SERIALIZED_NAME_VEDOUCI = "vedouci";
  @SerializedName(SERIALIZED_NAME_VEDOUCI)
  private List<AngazmaOsobaVr> vedouci = null;

  public static final String SERIALIZED_NAME_OSTATNI_SKUTECNOSTI = "ostatniSkutecnosti";
  @SerializedName(SERIALIZED_NAME_OSTATNI_SKUTECNOSTI)
  private List<ObecnyTextVr> ostatniSkutecnosti = null;

  public static final String SERIALIZED_NAME_CINNOSTI = "cinnosti";
  @SerializedName(SERIALIZED_NAME_CINNOSTI)
  private CinnostiVr cinnosti;

  public static final String SERIALIZED_NAME_ICO = "ico";
  @SerializedName(SERIALIZED_NAME_ICO)
  private List<IcoVr> ico = null;

  public static final String SERIALIZED_NAME_SIDLO = "sidlo";
  @SerializedName(SERIALIZED_NAME_SIDLO)
  private List<AdresaVr> sidlo = null;

  public static final String SERIALIZED_NAME_PRAVNI_FORMA = "pravniForma";
  @SerializedName(SERIALIZED_NAME_PRAVNI_FORMA)
  private List<PravniFormaVr> pravniForma = null;

  public static final String SERIALIZED_NAME_OBCHODNI_JMENO = "obchodniJmeno";
  @SerializedName(SERIALIZED_NAME_OBCHODNI_JMENO)
  private List<ObchodniJmenoVr> obchodniJmeno = null;

  public OdstepnyZavodVrAllOf() {
  }

  public OdstepnyZavodVrAllOf vedouci(List<AngazmaOsobaVr> vedouci) {
    
    this.vedouci = vedouci;
    return this;
  }

  public OdstepnyZavodVrAllOf addVedouciItem(AngazmaOsobaVr vedouciItem) {
    if (this.vedouci == null) {
      this.vedouci = new ArrayList<>();
    }
    this.vedouci.add(vedouciItem);
    return this;
  }

   /**
   * Get vedouci
   * @return vedouci
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AngazmaOsobaVr> getVedouci() {
    return vedouci;
  }


  public void setVedouci(List<AngazmaOsobaVr> vedouci) {
    this.vedouci = vedouci;
  }


  public OdstepnyZavodVrAllOf ostatniSkutecnosti(List<ObecnyTextVr> ostatniSkutecnosti) {
    
    this.ostatniSkutecnosti = ostatniSkutecnosti;
    return this;
  }

  public OdstepnyZavodVrAllOf addOstatniSkutecnostiItem(ObecnyTextVr ostatniSkutecnostiItem) {
    if (this.ostatniSkutecnosti == null) {
      this.ostatniSkutecnosti = new ArrayList<>();
    }
    this.ostatniSkutecnosti.add(ostatniSkutecnostiItem);
    return this;
  }

   /**
   * Get ostatniSkutecnosti
   * @return ostatniSkutecnosti
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getOstatniSkutecnosti() {
    return ostatniSkutecnosti;
  }


  public void setOstatniSkutecnosti(List<ObecnyTextVr> ostatniSkutecnosti) {
    this.ostatniSkutecnosti = ostatniSkutecnosti;
  }


  public OdstepnyZavodVrAllOf cinnosti(CinnostiVr cinnosti) {
    
    this.cinnosti = cinnosti;
    return this;
  }

   /**
   * Get cinnosti
   * @return cinnosti
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CinnostiVr getCinnosti() {
    return cinnosti;
  }


  public void setCinnosti(CinnostiVr cinnosti) {
    this.cinnosti = cinnosti;
  }


  public OdstepnyZavodVrAllOf ico(List<IcoVr> ico) {
    
    this.ico = ico;
    return this;
  }

  public OdstepnyZavodVrAllOf addIcoItem(IcoVr icoItem) {
    if (this.ico == null) {
      this.ico = new ArrayList<>();
    }
    this.ico.add(icoItem);
    return this;
  }

   /**
   * Get ico
   * @return ico
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IcoVr> getIco() {
    return ico;
  }


  public void setIco(List<IcoVr> ico) {
    this.ico = ico;
  }


  public OdstepnyZavodVrAllOf sidlo(List<AdresaVr> sidlo) {
    
    this.sidlo = sidlo;
    return this;
  }

  public OdstepnyZavodVrAllOf addSidloItem(AdresaVr sidloItem) {
    if (this.sidlo == null) {
      this.sidlo = new ArrayList<>();
    }
    this.sidlo.add(sidloItem);
    return this;
  }

   /**
   * Get sidlo
   * @return sidlo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AdresaVr> getSidlo() {
    return sidlo;
  }


  public void setSidlo(List<AdresaVr> sidlo) {
    this.sidlo = sidlo;
  }


  public OdstepnyZavodVrAllOf pravniForma(List<PravniFormaVr> pravniForma) {
    
    this.pravniForma = pravniForma;
    return this;
  }

  public OdstepnyZavodVrAllOf addPravniFormaItem(PravniFormaVr pravniFormaItem) {
    if (this.pravniForma == null) {
      this.pravniForma = new ArrayList<>();
    }
    this.pravniForma.add(pravniFormaItem);
    return this;
  }

   /**
   * Get pravniForma
   * @return pravniForma
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PravniFormaVr> getPravniForma() {
    return pravniForma;
  }


  public void setPravniForma(List<PravniFormaVr> pravniForma) {
    this.pravniForma = pravniForma;
  }


  public OdstepnyZavodVrAllOf obchodniJmeno(List<ObchodniJmenoVr> obchodniJmeno) {
    
    this.obchodniJmeno = obchodniJmeno;
    return this;
  }

  public OdstepnyZavodVrAllOf addObchodniJmenoItem(ObchodniJmenoVr obchodniJmenoItem) {
    if (this.obchodniJmeno == null) {
      this.obchodniJmeno = new ArrayList<>();
    }
    this.obchodniJmeno.add(obchodniJmenoItem);
    return this;
  }

   /**
   * Get obchodniJmeno
   * @return obchodniJmeno
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObchodniJmenoVr> getObchodniJmeno() {
    return obchodniJmeno;
  }


  public void setObchodniJmeno(List<ObchodniJmenoVr> obchodniJmeno) {
    this.obchodniJmeno = obchodniJmeno;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OdstepnyZavodVrAllOf odstepnyZavodVrAllOf = (OdstepnyZavodVrAllOf) o;
    return Objects.equals(this.vedouci, odstepnyZavodVrAllOf.vedouci) &&
        Objects.equals(this.ostatniSkutecnosti, odstepnyZavodVrAllOf.ostatniSkutecnosti) &&
        Objects.equals(this.cinnosti, odstepnyZavodVrAllOf.cinnosti) &&
        Objects.equals(this.ico, odstepnyZavodVrAllOf.ico) &&
        Objects.equals(this.sidlo, odstepnyZavodVrAllOf.sidlo) &&
        Objects.equals(this.pravniForma, odstepnyZavodVrAllOf.pravniForma) &&
        Objects.equals(this.obchodniJmeno, odstepnyZavodVrAllOf.obchodniJmeno);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vedouci, ostatniSkutecnosti, cinnosti, ico, sidlo, pravniForma, obchodniJmeno);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OdstepnyZavodVrAllOf {\n");
    sb.append("    vedouci: ").append(toIndentedString(vedouci)).append("\n");
    sb.append("    ostatniSkutecnosti: ").append(toIndentedString(ostatniSkutecnosti)).append("\n");
    sb.append("    cinnosti: ").append(toIndentedString(cinnosti)).append("\n");
    sb.append("    ico: ").append(toIndentedString(ico)).append("\n");
    sb.append("    sidlo: ").append(toIndentedString(sidlo)).append("\n");
    sb.append("    pravniForma: ").append(toIndentedString(pravniForma)).append("\n");
    sb.append("    obchodniJmeno: ").append(toIndentedString(obchodniJmeno)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vedouci");
    openapiFields.add("ostatniSkutecnosti");
    openapiFields.add("cinnosti");
    openapiFields.add("ico");
    openapiFields.add("sidlo");
    openapiFields.add("pravniForma");
    openapiFields.add("obchodniJmeno");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OdstepnyZavodVrAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OdstepnyZavodVrAllOf.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OdstepnyZavodVrAllOf is not found in the empty JSON string", OdstepnyZavodVrAllOf.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OdstepnyZavodVrAllOf.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OdstepnyZavodVrAllOf` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("vedouci") != null && !jsonObj.get("vedouci").isJsonNull()) {
        JsonArray jsonArrayvedouci = jsonObj.getAsJsonArray("vedouci");
        if (jsonArrayvedouci != null) {
          // ensure the json data is an array
          if (!jsonObj.get("vedouci").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `vedouci` to be an array in the JSON string but got `%s`", jsonObj.get("vedouci").toString()));
          }

          // validate the optional field `vedouci` (array)
          for (int i = 0; i < jsonArrayvedouci.size(); i++) {
            AngazmaOsobaVr.validateJsonObject(jsonArrayvedouci.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("ostatniSkutecnosti") != null && !jsonObj.get("ostatniSkutecnosti").isJsonNull()) {
        JsonArray jsonArrayostatniSkutecnosti = jsonObj.getAsJsonArray("ostatniSkutecnosti");
        if (jsonArrayostatniSkutecnosti != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ostatniSkutecnosti").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ostatniSkutecnosti` to be an array in the JSON string but got `%s`", jsonObj.get("ostatniSkutecnosti").toString()));
          }

          // validate the optional field `ostatniSkutecnosti` (array)
          for (int i = 0; i < jsonArrayostatniSkutecnosti.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArrayostatniSkutecnosti.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `cinnosti`
      if (jsonObj.get("cinnosti") != null && !jsonObj.get("cinnosti").isJsonNull()) {
        CinnostiVr.validateJsonObject(jsonObj.getAsJsonObject("cinnosti"));
      }
      if (jsonObj.get("ico") != null && !jsonObj.get("ico").isJsonNull()) {
        JsonArray jsonArrayico = jsonObj.getAsJsonArray("ico");
        if (jsonArrayico != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ico").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ico` to be an array in the JSON string but got `%s`", jsonObj.get("ico").toString()));
          }

          // validate the optional field `ico` (array)
          for (int i = 0; i < jsonArrayico.size(); i++) {
            IcoVr.validateJsonObject(jsonArrayico.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("sidlo") != null && !jsonObj.get("sidlo").isJsonNull()) {
        JsonArray jsonArraysidlo = jsonObj.getAsJsonArray("sidlo");
        if (jsonArraysidlo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sidlo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sidlo` to be an array in the JSON string but got `%s`", jsonObj.get("sidlo").toString()));
          }

          // validate the optional field `sidlo` (array)
          for (int i = 0; i < jsonArraysidlo.size(); i++) {
            AdresaVr.validateJsonObject(jsonArraysidlo.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("pravniForma") != null && !jsonObj.get("pravniForma").isJsonNull()) {
        JsonArray jsonArraypravniForma = jsonObj.getAsJsonArray("pravniForma");
        if (jsonArraypravniForma != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pravniForma").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pravniForma` to be an array in the JSON string but got `%s`", jsonObj.get("pravniForma").toString()));
          }

          // validate the optional field `pravniForma` (array)
          for (int i = 0; i < jsonArraypravniForma.size(); i++) {
            PravniFormaVr.validateJsonObject(jsonArraypravniForma.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("obchodniJmeno") != null && !jsonObj.get("obchodniJmeno").isJsonNull()) {
        JsonArray jsonArrayobchodniJmeno = jsonObj.getAsJsonArray("obchodniJmeno");
        if (jsonArrayobchodniJmeno != null) {
          // ensure the json data is an array
          if (!jsonObj.get("obchodniJmeno").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `obchodniJmeno` to be an array in the JSON string but got `%s`", jsonObj.get("obchodniJmeno").toString()));
          }

          // validate the optional field `obchodniJmeno` (array)
          for (int i = 0; i < jsonArrayobchodniJmeno.size(); i++) {
            ObchodniJmenoVr.validateJsonObject(jsonArrayobchodniJmeno.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OdstepnyZavodVrAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OdstepnyZavodVrAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OdstepnyZavodVrAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OdstepnyZavodVrAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<OdstepnyZavodVrAllOf>() {
           @Override
           public void write(JsonWriter out, OdstepnyZavodVrAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OdstepnyZavodVrAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OdstepnyZavodVrAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OdstepnyZavodVrAllOf
  * @throws IOException if the JSON string is invalid with respect to OdstepnyZavodVrAllOf
  */
  public static OdstepnyZavodVrAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OdstepnyZavodVrAllOf.class);
  }

 /**
  * Convert an instance of OdstepnyZavodVrAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

