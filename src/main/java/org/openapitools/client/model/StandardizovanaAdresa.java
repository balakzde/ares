/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Standardizovaná adresa
 */
@ApiModel(description = "Standardizovaná adresa")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class StandardizovanaAdresa {
  public static final String SERIALIZED_NAME_TYP_STAVEBNIHO_OBJEKTU = "typStavebnihoObjektu";
  @SerializedName(SERIALIZED_NAME_TYP_STAVEBNIHO_OBJEKTU)
  private String typStavebnihoObjektu;

  public static final String SERIALIZED_NAME_CISLO_DOMOVNI = "cisloDomovni";
  @SerializedName(SERIALIZED_NAME_CISLO_DOMOVNI)
  private Integer cisloDomovni;

  public static final String SERIALIZED_NAME_CISLO_ORIENTACNI = "cisloOrientacni";
  @SerializedName(SERIALIZED_NAME_CISLO_ORIENTACNI)
  private Integer cisloOrientacni;

  public static final String SERIALIZED_NAME_CISLO_ORIENTACNI_PISMENO = "cisloOrientacniPismeno";
  @SerializedName(SERIALIZED_NAME_CISLO_ORIENTACNI_PISMENO)
  private String cisloOrientacniPismeno;

  public static final String SERIALIZED_NAME_KOD_ADRESNIHO_MISTA = "kodAdresnihoMista";
  @SerializedName(SERIALIZED_NAME_KOD_ADRESNIHO_MISTA)
  private Integer kodAdresnihoMista;

  public static final String SERIALIZED_NAME_KOD_CASTI_OBCE = "kodCastiObce";
  @SerializedName(SERIALIZED_NAME_KOD_CASTI_OBCE)
  private Integer kodCastiObce;

  public static final String SERIALIZED_NAME_KOD_KRAJE = "kodKraje";
  @SerializedName(SERIALIZED_NAME_KOD_KRAJE)
  private Integer kodKraje;

  public static final String SERIALIZED_NAME_KOD_MESTSKE_CASTI_OBVODU = "kodMestskeCastiObvodu";
  @SerializedName(SERIALIZED_NAME_KOD_MESTSKE_CASTI_OBVODU)
  private Integer kodMestskeCastiObvodu;

  public static final String SERIALIZED_NAME_KOD_MESTSKEHO_OBVODU_P = "kodMestskehoObvoduP";
  @SerializedName(SERIALIZED_NAME_KOD_MESTSKEHO_OBVODU_P)
  private Integer kodMestskehoObvoduP;

  public static final String SERIALIZED_NAME_KOD_OBCE = "kodObce";
  @SerializedName(SERIALIZED_NAME_KOD_OBCE)
  private Integer kodObce;

  public static final String SERIALIZED_NAME_KOD_OKRESU = "kodOkresu";
  @SerializedName(SERIALIZED_NAME_KOD_OKRESU)
  private Integer kodOkresu;

  public static final String SERIALIZED_NAME_KOD_SPRAVNIHO_OBVODU_P = "kodSpravnihoObvoduP";
  @SerializedName(SERIALIZED_NAME_KOD_SPRAVNIHO_OBVODU_P)
  private Integer kodSpravnihoObvoduP;

  public static final String SERIALIZED_NAME_KOD_STAVEBNIHO_OBJEKTU = "kodStavebnihoObjektu";
  @SerializedName(SERIALIZED_NAME_KOD_STAVEBNIHO_OBJEKTU)
  private Integer kodStavebnihoObjektu;

  public static final String SERIALIZED_NAME_KOD_ULICE = "kodUlice";
  @SerializedName(SERIALIZED_NAME_KOD_ULICE)
  private Integer kodUlice;

  public static final String SERIALIZED_NAME_NAZEV_CASTI_OBCE = "nazevCastiObce";
  @SerializedName(SERIALIZED_NAME_NAZEV_CASTI_OBCE)
  private String nazevCastiObce;

  public static final String SERIALIZED_NAME_NAZEV_KRAJE = "nazevKraje";
  @SerializedName(SERIALIZED_NAME_NAZEV_KRAJE)
  private String nazevKraje;

  public static final String SERIALIZED_NAME_NAZEV_MESTSKE_CASTI_OBVODU = "nazevMestskeCastiObvodu";
  @SerializedName(SERIALIZED_NAME_NAZEV_MESTSKE_CASTI_OBVODU)
  private String nazevMestskeCastiObvodu;

  public static final String SERIALIZED_NAME_NAZEV_MESTSKEHO_OBVODU_P = "nazevMestskehoObvoduP";
  @SerializedName(SERIALIZED_NAME_NAZEV_MESTSKEHO_OBVODU_P)
  private String nazevMestskehoObvoduP;

  public static final String SERIALIZED_NAME_NAZEV_OBCE = "nazevObce";
  @SerializedName(SERIALIZED_NAME_NAZEV_OBCE)
  private String nazevObce;

  public static final String SERIALIZED_NAME_NAZEV_OKRESU = "nazevOkresu";
  @SerializedName(SERIALIZED_NAME_NAZEV_OKRESU)
  private String nazevOkresu;

  public static final String SERIALIZED_NAME_NAZEV_SPRAVNIHO_OBVODU_P = "nazevSpravnihoObvoduP";
  @SerializedName(SERIALIZED_NAME_NAZEV_SPRAVNIHO_OBVODU_P)
  private String nazevSpravnihoObvoduP;

  public static final String SERIALIZED_NAME_NAZEV_ULICE = "nazevUlice";
  @SerializedName(SERIALIZED_NAME_NAZEV_ULICE)
  private String nazevUlice;

  public static final String SERIALIZED_NAME_PSC = "psc";
  @SerializedName(SERIALIZED_NAME_PSC)
  private Integer psc;

  public static final String SERIALIZED_NAME_TEXTOVA_ADRESA = "textovaAdresa";
  @SerializedName(SERIALIZED_NAME_TEXTOVA_ADRESA)
  private String textovaAdresa;

  public StandardizovanaAdresa() {
  }

  public StandardizovanaAdresa typStavebnihoObjektu(String typStavebnihoObjektu) {
    
    this.typStavebnihoObjektu = typStavebnihoObjektu;
    return this;
  }

   /**
   * Typ stavebního objektu - kód (Číselník kod:TypStavebnihoObjektu, zdroj:ruian) 
   * @return typStavebnihoObjektu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Typ stavebního objektu - kód (Číselník kod:TypStavebnihoObjektu, zdroj:ruian) ")

  public String getTypStavebnihoObjektu() {
    return typStavebnihoObjektu;
  }


  public void setTypStavebnihoObjektu(String typStavebnihoObjektu) {
    this.typStavebnihoObjektu = typStavebnihoObjektu;
  }


  public StandardizovanaAdresa cisloDomovni(Integer cisloDomovni) {
    
    this.cisloDomovni = cisloDomovni;
    return this;
  }

   /**
   * Číslo domovní
   * maximum: 9999
   * @return cisloDomovni
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Číslo domovní")

  public Integer getCisloDomovni() {
    return cisloDomovni;
  }


  public void setCisloDomovni(Integer cisloDomovni) {
    this.cisloDomovni = cisloDomovni;
  }


  public StandardizovanaAdresa cisloOrientacni(Integer cisloOrientacni) {
    
    this.cisloOrientacni = cisloOrientacni;
    return this;
  }

   /**
   * Číslo orientační - číselná část
   * maximum: 999
   * @return cisloOrientacni
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Číslo orientační - číselná část")

  public Integer getCisloOrientacni() {
    return cisloOrientacni;
  }


  public void setCisloOrientacni(Integer cisloOrientacni) {
    this.cisloOrientacni = cisloOrientacni;
  }


  public StandardizovanaAdresa cisloOrientacniPismeno(String cisloOrientacniPismeno) {
    
    this.cisloOrientacniPismeno = cisloOrientacniPismeno;
    return this;
  }

   /**
   * Číslo orientační - písmenná část
   * @return cisloOrientacniPismeno
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Číslo orientační - písmenná část")

  public String getCisloOrientacniPismeno() {
    return cisloOrientacniPismeno;
  }


  public void setCisloOrientacniPismeno(String cisloOrientacniPismeno) {
    this.cisloOrientacniPismeno = cisloOrientacniPismeno;
  }


  public StandardizovanaAdresa kodAdresnihoMista(Integer kodAdresnihoMista) {
    
    this.kodAdresnihoMista = kodAdresnihoMista;
    return this;
  }

   /**
   * Kód adresního místa
   * minimum: 0
   * maximum: 999999999
   * @return kodAdresnihoMista
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód adresního místa")

  public Integer getKodAdresnihoMista() {
    return kodAdresnihoMista;
  }


  public void setKodAdresnihoMista(Integer kodAdresnihoMista) {
    this.kodAdresnihoMista = kodAdresnihoMista;
  }


  public StandardizovanaAdresa kodCastiObce(Integer kodCastiObce) {
    
    this.kodCastiObce = kodCastiObce;
    return this;
  }

   /**
   * Kód časti obce
   * minimum: 0
   * maximum: 999999
   * @return kodCastiObce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód časti obce")

  public Integer getKodCastiObce() {
    return kodCastiObce;
  }


  public void setKodCastiObce(Integer kodCastiObce) {
    this.kodCastiObce = kodCastiObce;
  }


  public StandardizovanaAdresa kodKraje(Integer kodKraje) {
    
    this.kodKraje = kodKraje;
    return this;
  }

   /**
   * Kód kraje
   * minimum: 0
   * maximum: 999
   * @return kodKraje
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód kraje")

  public Integer getKodKraje() {
    return kodKraje;
  }


  public void setKodKraje(Integer kodKraje) {
    this.kodKraje = kodKraje;
  }


  public StandardizovanaAdresa kodMestskeCastiObvodu(Integer kodMestskeCastiObvodu) {
    
    this.kodMestskeCastiObvodu = kodMestskeCastiObvodu;
    return this;
  }

   /**
   * Kód městské části statutárního města
   * minimum: 0
   * maximum: 999999
   * @return kodMestskeCastiObvodu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód městské části statutárního města")

  public Integer getKodMestskeCastiObvodu() {
    return kodMestskeCastiObvodu;
  }


  public void setKodMestskeCastiObvodu(Integer kodMestskeCastiObvodu) {
    this.kodMestskeCastiObvodu = kodMestskeCastiObvodu;
  }


  public StandardizovanaAdresa kodMestskehoObvoduP(Integer kodMestskehoObvoduP) {
    
    this.kodMestskehoObvoduP = kodMestskehoObvoduP;
    return this;
  }

   /**
   * Kód městského obvodu Prahy
   * minimum: 0
   * maximum: 999
   * @return kodMestskehoObvoduP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód městského obvodu Prahy")

  public Integer getKodMestskehoObvoduP() {
    return kodMestskehoObvoduP;
  }


  public void setKodMestskehoObvoduP(Integer kodMestskehoObvoduP) {
    this.kodMestskehoObvoduP = kodMestskehoObvoduP;
  }


  public StandardizovanaAdresa kodObce(Integer kodObce) {
    
    this.kodObce = kodObce;
    return this;
  }

   /**
   * Kód obce
   * minimum: 0
   * maximum: 999999
   * @return kodObce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód obce")

  public Integer getKodObce() {
    return kodObce;
  }


  public void setKodObce(Integer kodObce) {
    this.kodObce = kodObce;
  }


  public StandardizovanaAdresa kodOkresu(Integer kodOkresu) {
    
    this.kodOkresu = kodOkresu;
    return this;
  }

   /**
   * Kód okresu
   * minimum: 0
   * maximum: 9999
   * @return kodOkresu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód okresu")

  public Integer getKodOkresu() {
    return kodOkresu;
  }


  public void setKodOkresu(Integer kodOkresu) {
    this.kodOkresu = kodOkresu;
  }


  public StandardizovanaAdresa kodSpravnihoObvoduP(Integer kodSpravnihoObvoduP) {
    
    this.kodSpravnihoObvoduP = kodSpravnihoObvoduP;
    return this;
  }

   /**
   * Kód správního obvodu Prahy
   * minimum: 0
   * maximum: 999
   * @return kodSpravnihoObvoduP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód správního obvodu Prahy")

  public Integer getKodSpravnihoObvoduP() {
    return kodSpravnihoObvoduP;
  }


  public void setKodSpravnihoObvoduP(Integer kodSpravnihoObvoduP) {
    this.kodSpravnihoObvoduP = kodSpravnihoObvoduP;
  }


  public StandardizovanaAdresa kodStavebnihoObjektu(Integer kodStavebnihoObjektu) {
    
    this.kodStavebnihoObjektu = kodStavebnihoObjektu;
    return this;
  }

   /**
   * Kód stavebního objektu
   * minimum: 0
   * maximum: 999999999
   * @return kodStavebnihoObjektu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód stavebního objektu")

  public Integer getKodStavebnihoObjektu() {
    return kodStavebnihoObjektu;
  }


  public void setKodStavebnihoObjektu(Integer kodStavebnihoObjektu) {
    this.kodStavebnihoObjektu = kodStavebnihoObjektu;
  }


  public StandardizovanaAdresa kodUlice(Integer kodUlice) {
    
    this.kodUlice = kodUlice;
    return this;
  }

   /**
   * Kód ulice, veřejného prostranství ze zdroje
   * minimum: 0
   * maximum: 9999999
   * @return kodUlice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kód ulice, veřejného prostranství ze zdroje")

  public Integer getKodUlice() {
    return kodUlice;
  }


  public void setKodUlice(Integer kodUlice) {
    this.kodUlice = kodUlice;
  }


  public StandardizovanaAdresa nazevCastiObce(String nazevCastiObce) {
    
    this.nazevCastiObce = nazevCastiObce;
    return this;
  }

   /**
   * Název části obce
   * @return nazevCastiObce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název části obce")

  public String getNazevCastiObce() {
    return nazevCastiObce;
  }


  public void setNazevCastiObce(String nazevCastiObce) {
    this.nazevCastiObce = nazevCastiObce;
  }


  public StandardizovanaAdresa nazevKraje(String nazevKraje) {
    
    this.nazevKraje = nazevKraje;
    return this;
  }

   /**
   * Název kraje
   * @return nazevKraje
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název kraje")

  public String getNazevKraje() {
    return nazevKraje;
  }


  public void setNazevKraje(String nazevKraje) {
    this.nazevKraje = nazevKraje;
  }


  public StandardizovanaAdresa nazevMestskeCastiObvodu(String nazevMestskeCastiObvodu) {
    
    this.nazevMestskeCastiObvodu = nazevMestskeCastiObvodu;
    return this;
  }

   /**
   * Název městské části statutárního města 
   * @return nazevMestskeCastiObvodu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název městské části statutárního města ")

  public String getNazevMestskeCastiObvodu() {
    return nazevMestskeCastiObvodu;
  }


  public void setNazevMestskeCastiObvodu(String nazevMestskeCastiObvodu) {
    this.nazevMestskeCastiObvodu = nazevMestskeCastiObvodu;
  }


  public StandardizovanaAdresa nazevMestskehoObvoduP(String nazevMestskehoObvoduP) {
    
    this.nazevMestskehoObvoduP = nazevMestskehoObvoduP;
    return this;
  }

   /**
   * Název městského obvodu Prahy
   * @return nazevMestskehoObvoduP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název městského obvodu Prahy")

  public String getNazevMestskehoObvoduP() {
    return nazevMestskehoObvoduP;
  }


  public void setNazevMestskehoObvoduP(String nazevMestskehoObvoduP) {
    this.nazevMestskehoObvoduP = nazevMestskehoObvoduP;
  }


  public StandardizovanaAdresa nazevObce(String nazevObce) {
    
    this.nazevObce = nazevObce;
    return this;
  }

   /**
   * Název obce
   * @return nazevObce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název obce")

  public String getNazevObce() {
    return nazevObce;
  }


  public void setNazevObce(String nazevObce) {
    this.nazevObce = nazevObce;
  }


  public StandardizovanaAdresa nazevOkresu(String nazevOkresu) {
    
    this.nazevOkresu = nazevOkresu;
    return this;
  }

   /**
   * Název okresu
   * @return nazevOkresu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název okresu")

  public String getNazevOkresu() {
    return nazevOkresu;
  }


  public void setNazevOkresu(String nazevOkresu) {
    this.nazevOkresu = nazevOkresu;
  }


  public StandardizovanaAdresa nazevSpravnihoObvoduP(String nazevSpravnihoObvoduP) {
    
    this.nazevSpravnihoObvoduP = nazevSpravnihoObvoduP;
    return this;
  }

   /**
   * Název správního obvodu Prahy 
   * @return nazevSpravnihoObvoduP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název správního obvodu Prahy ")

  public String getNazevSpravnihoObvoduP() {
    return nazevSpravnihoObvoduP;
  }


  public void setNazevSpravnihoObvoduP(String nazevSpravnihoObvoduP) {
    this.nazevSpravnihoObvoduP = nazevSpravnihoObvoduP;
  }


  public StandardizovanaAdresa nazevUlice(String nazevUlice) {
    
    this.nazevUlice = nazevUlice;
    return this;
  }

   /**
   * Název ulice, veřejného prostranství 
   * @return nazevUlice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Název ulice, veřejného prostranství ")

  public String getNazevUlice() {
    return nazevUlice;
  }


  public void setNazevUlice(String nazevUlice) {
    this.nazevUlice = nazevUlice;
  }


  public StandardizovanaAdresa psc(Integer psc) {
    
    this.psc = psc;
    return this;
  }

   /**
   * Poštovní směrovací číslo adresní pošty
   * @return psc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Poštovní směrovací číslo adresní pošty")

  public Integer getPsc() {
    return psc;
  }


  public void setPsc(Integer psc) {
    this.psc = psc;
  }


  public StandardizovanaAdresa textovaAdresa(String textovaAdresa) {
    
    this.textovaAdresa = textovaAdresa;
    return this;
  }

   /**
   * Textová podoba adresy
   * @return textovaAdresa
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Textová podoba adresy")

  public String getTextovaAdresa() {
    return textovaAdresa;
  }


  public void setTextovaAdresa(String textovaAdresa) {
    this.textovaAdresa = textovaAdresa;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandardizovanaAdresa standardizovanaAdresa = (StandardizovanaAdresa) o;
    return Objects.equals(this.typStavebnihoObjektu, standardizovanaAdresa.typStavebnihoObjektu) &&
        Objects.equals(this.cisloDomovni, standardizovanaAdresa.cisloDomovni) &&
        Objects.equals(this.cisloOrientacni, standardizovanaAdresa.cisloOrientacni) &&
        Objects.equals(this.cisloOrientacniPismeno, standardizovanaAdresa.cisloOrientacniPismeno) &&
        Objects.equals(this.kodAdresnihoMista, standardizovanaAdresa.kodAdresnihoMista) &&
        Objects.equals(this.kodCastiObce, standardizovanaAdresa.kodCastiObce) &&
        Objects.equals(this.kodKraje, standardizovanaAdresa.kodKraje) &&
        Objects.equals(this.kodMestskeCastiObvodu, standardizovanaAdresa.kodMestskeCastiObvodu) &&
        Objects.equals(this.kodMestskehoObvoduP, standardizovanaAdresa.kodMestskehoObvoduP) &&
        Objects.equals(this.kodObce, standardizovanaAdresa.kodObce) &&
        Objects.equals(this.kodOkresu, standardizovanaAdresa.kodOkresu) &&
        Objects.equals(this.kodSpravnihoObvoduP, standardizovanaAdresa.kodSpravnihoObvoduP) &&
        Objects.equals(this.kodStavebnihoObjektu, standardizovanaAdresa.kodStavebnihoObjektu) &&
        Objects.equals(this.kodUlice, standardizovanaAdresa.kodUlice) &&
        Objects.equals(this.nazevCastiObce, standardizovanaAdresa.nazevCastiObce) &&
        Objects.equals(this.nazevKraje, standardizovanaAdresa.nazevKraje) &&
        Objects.equals(this.nazevMestskeCastiObvodu, standardizovanaAdresa.nazevMestskeCastiObvodu) &&
        Objects.equals(this.nazevMestskehoObvoduP, standardizovanaAdresa.nazevMestskehoObvoduP) &&
        Objects.equals(this.nazevObce, standardizovanaAdresa.nazevObce) &&
        Objects.equals(this.nazevOkresu, standardizovanaAdresa.nazevOkresu) &&
        Objects.equals(this.nazevSpravnihoObvoduP, standardizovanaAdresa.nazevSpravnihoObvoduP) &&
        Objects.equals(this.nazevUlice, standardizovanaAdresa.nazevUlice) &&
        Objects.equals(this.psc, standardizovanaAdresa.psc) &&
        Objects.equals(this.textovaAdresa, standardizovanaAdresa.textovaAdresa);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typStavebnihoObjektu, cisloDomovni, cisloOrientacni, cisloOrientacniPismeno, kodAdresnihoMista, kodCastiObce, kodKraje, kodMestskeCastiObvodu, kodMestskehoObvoduP, kodObce, kodOkresu, kodSpravnihoObvoduP, kodStavebnihoObjektu, kodUlice, nazevCastiObce, nazevKraje, nazevMestskeCastiObvodu, nazevMestskehoObvoduP, nazevObce, nazevOkresu, nazevSpravnihoObvoduP, nazevUlice, psc, textovaAdresa);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandardizovanaAdresa {\n");
    sb.append("    typStavebnihoObjektu: ").append(toIndentedString(typStavebnihoObjektu)).append("\n");
    sb.append("    cisloDomovni: ").append(toIndentedString(cisloDomovni)).append("\n");
    sb.append("    cisloOrientacni: ").append(toIndentedString(cisloOrientacni)).append("\n");
    sb.append("    cisloOrientacniPismeno: ").append(toIndentedString(cisloOrientacniPismeno)).append("\n");
    sb.append("    kodAdresnihoMista: ").append(toIndentedString(kodAdresnihoMista)).append("\n");
    sb.append("    kodCastiObce: ").append(toIndentedString(kodCastiObce)).append("\n");
    sb.append("    kodKraje: ").append(toIndentedString(kodKraje)).append("\n");
    sb.append("    kodMestskeCastiObvodu: ").append(toIndentedString(kodMestskeCastiObvodu)).append("\n");
    sb.append("    kodMestskehoObvoduP: ").append(toIndentedString(kodMestskehoObvoduP)).append("\n");
    sb.append("    kodObce: ").append(toIndentedString(kodObce)).append("\n");
    sb.append("    kodOkresu: ").append(toIndentedString(kodOkresu)).append("\n");
    sb.append("    kodSpravnihoObvoduP: ").append(toIndentedString(kodSpravnihoObvoduP)).append("\n");
    sb.append("    kodStavebnihoObjektu: ").append(toIndentedString(kodStavebnihoObjektu)).append("\n");
    sb.append("    kodUlice: ").append(toIndentedString(kodUlice)).append("\n");
    sb.append("    nazevCastiObce: ").append(toIndentedString(nazevCastiObce)).append("\n");
    sb.append("    nazevKraje: ").append(toIndentedString(nazevKraje)).append("\n");
    sb.append("    nazevMestskeCastiObvodu: ").append(toIndentedString(nazevMestskeCastiObvodu)).append("\n");
    sb.append("    nazevMestskehoObvoduP: ").append(toIndentedString(nazevMestskehoObvoduP)).append("\n");
    sb.append("    nazevObce: ").append(toIndentedString(nazevObce)).append("\n");
    sb.append("    nazevOkresu: ").append(toIndentedString(nazevOkresu)).append("\n");
    sb.append("    nazevSpravnihoObvoduP: ").append(toIndentedString(nazevSpravnihoObvoduP)).append("\n");
    sb.append("    nazevUlice: ").append(toIndentedString(nazevUlice)).append("\n");
    sb.append("    psc: ").append(toIndentedString(psc)).append("\n");
    sb.append("    textovaAdresa: ").append(toIndentedString(textovaAdresa)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("typStavebnihoObjektu");
    openapiFields.add("cisloDomovni");
    openapiFields.add("cisloOrientacni");
    openapiFields.add("cisloOrientacniPismeno");
    openapiFields.add("kodAdresnihoMista");
    openapiFields.add("kodCastiObce");
    openapiFields.add("kodKraje");
    openapiFields.add("kodMestskeCastiObvodu");
    openapiFields.add("kodMestskehoObvoduP");
    openapiFields.add("kodObce");
    openapiFields.add("kodOkresu");
    openapiFields.add("kodSpravnihoObvoduP");
    openapiFields.add("kodStavebnihoObjektu");
    openapiFields.add("kodUlice");
    openapiFields.add("nazevCastiObce");
    openapiFields.add("nazevKraje");
    openapiFields.add("nazevMestskeCastiObvodu");
    openapiFields.add("nazevMestskehoObvoduP");
    openapiFields.add("nazevObce");
    openapiFields.add("nazevOkresu");
    openapiFields.add("nazevSpravnihoObvoduP");
    openapiFields.add("nazevUlice");
    openapiFields.add("psc");
    openapiFields.add("textovaAdresa");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to StandardizovanaAdresa
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (StandardizovanaAdresa.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in StandardizovanaAdresa is not found in the empty JSON string", StandardizovanaAdresa.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!StandardizovanaAdresa.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StandardizovanaAdresa` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("typStavebnihoObjektu") != null && !jsonObj.get("typStavebnihoObjektu").isJsonNull()) && !jsonObj.get("typStavebnihoObjektu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typStavebnihoObjektu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typStavebnihoObjektu").toString()));
      }
      if ((jsonObj.get("cisloOrientacniPismeno") != null && !jsonObj.get("cisloOrientacniPismeno").isJsonNull()) && !jsonObj.get("cisloOrientacniPismeno").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cisloOrientacniPismeno` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cisloOrientacniPismeno").toString()));
      }
      if ((jsonObj.get("nazevCastiObce") != null && !jsonObj.get("nazevCastiObce").isJsonNull()) && !jsonObj.get("nazevCastiObce").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevCastiObce` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevCastiObce").toString()));
      }
      if ((jsonObj.get("nazevKraje") != null && !jsonObj.get("nazevKraje").isJsonNull()) && !jsonObj.get("nazevKraje").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevKraje` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevKraje").toString()));
      }
      if ((jsonObj.get("nazevMestskeCastiObvodu") != null && !jsonObj.get("nazevMestskeCastiObvodu").isJsonNull()) && !jsonObj.get("nazevMestskeCastiObvodu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevMestskeCastiObvodu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevMestskeCastiObvodu").toString()));
      }
      if ((jsonObj.get("nazevMestskehoObvoduP") != null && !jsonObj.get("nazevMestskehoObvoduP").isJsonNull()) && !jsonObj.get("nazevMestskehoObvoduP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevMestskehoObvoduP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevMestskehoObvoduP").toString()));
      }
      if ((jsonObj.get("nazevObce") != null && !jsonObj.get("nazevObce").isJsonNull()) && !jsonObj.get("nazevObce").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevObce` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevObce").toString()));
      }
      if ((jsonObj.get("nazevOkresu") != null && !jsonObj.get("nazevOkresu").isJsonNull()) && !jsonObj.get("nazevOkresu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevOkresu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevOkresu").toString()));
      }
      if ((jsonObj.get("nazevSpravnihoObvoduP") != null && !jsonObj.get("nazevSpravnihoObvoduP").isJsonNull()) && !jsonObj.get("nazevSpravnihoObvoduP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevSpravnihoObvoduP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevSpravnihoObvoduP").toString()));
      }
      if ((jsonObj.get("nazevUlice") != null && !jsonObj.get("nazevUlice").isJsonNull()) && !jsonObj.get("nazevUlice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nazevUlice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nazevUlice").toString()));
      }
      if ((jsonObj.get("textovaAdresa") != null && !jsonObj.get("textovaAdresa").isJsonNull()) && !jsonObj.get("textovaAdresa").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `textovaAdresa` to be a primitive type in the JSON string but got `%s`", jsonObj.get("textovaAdresa").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StandardizovanaAdresa.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StandardizovanaAdresa' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StandardizovanaAdresa> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StandardizovanaAdresa.class));

       return (TypeAdapter<T>) new TypeAdapter<StandardizovanaAdresa>() {
           @Override
           public void write(JsonWriter out, StandardizovanaAdresa value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StandardizovanaAdresa read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StandardizovanaAdresa given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StandardizovanaAdresa
  * @throws IOException if the JSON string is invalid with respect to StandardizovanaAdresa
  */
  public static StandardizovanaAdresa fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StandardizovanaAdresa.class);
  }

 /**
  * Convert an instance of StandardizovanaAdresa to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

