/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.StandardizovanaAdresa;
import org.openapitools.client.model.StandardizovanaAdresaFiltr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Seznam nalezených standardizovaných adres
 */
@ApiModel(description = "Seznam nalezených standardizovaných adres")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class StandardizovaneAdresySeznam {
  public static final String SERIALIZED_NAME_POCET_CELKEM = "pocetCelkem";
  @SerializedName(SERIALIZED_NAME_POCET_CELKEM)
  private Integer pocetCelkem;

  public static final String SERIALIZED_NAME_STANDARDIZOVANE_ADRESY = "standardizovaneAdresy";
  @SerializedName(SERIALIZED_NAME_STANDARDIZOVANE_ADRESY)
  private List<StandardizovanaAdresa> standardizovaneAdresy = null;

  public static final String SERIALIZED_NAME_STAV_STANDARDIZACE = "stavStandardizace";
  @SerializedName(SERIALIZED_NAME_STAV_STANDARDIZACE)
  private String stavStandardizace;

  public static final String SERIALIZED_NAME_REQUEST = "request";
  @SerializedName(SERIALIZED_NAME_REQUEST)
  private StandardizovanaAdresaFiltr request;

  public StandardizovaneAdresySeznam() {
  }

  public StandardizovaneAdresySeznam pocetCelkem(Integer pocetCelkem) {
    
    this.pocetCelkem = pocetCelkem;
    return this;
  }

   /**
   * Počet prvků seznamu.
   * minimum: 0
   * @return pocetCelkem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Počet prvků seznamu.")

  public Integer getPocetCelkem() {
    return pocetCelkem;
  }


  public void setPocetCelkem(Integer pocetCelkem) {
    this.pocetCelkem = pocetCelkem;
  }


  public StandardizovaneAdresySeznam standardizovaneAdresy(List<StandardizovanaAdresa> standardizovaneAdresy) {
    
    this.standardizovaneAdresy = standardizovaneAdresy;
    return this;
  }

  public StandardizovaneAdresySeznam addStandardizovaneAdresyItem(StandardizovanaAdresa standardizovaneAdresyItem) {
    if (this.standardizovaneAdresy == null) {
      this.standardizovaneAdresy = new ArrayList<>();
    }
    this.standardizovaneAdresy.add(standardizovaneAdresyItem);
    return this;
  }

   /**
   * Get standardizovaneAdresy
   * @return standardizovaneAdresy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StandardizovanaAdresa> getStandardizovaneAdresy() {
    return standardizovaneAdresy;
  }


  public void setStandardizovaneAdresy(List<StandardizovanaAdresa> standardizovaneAdresy) {
    this.standardizovaneAdresy = standardizovaneAdresy;
  }


  public StandardizovaneAdresySeznam stavStandardizace(String stavStandardizace) {
    
    this.stavStandardizace = stavStandardizace;
    return this;
  }

   /**
   * Stav standardizace adresy - kod (Číselník kod:StavStandardizaceAdresy) UPLNA, CASTECNA_OBEC/..., NEUSPESNA
   * @return stavStandardizace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stav standardizace adresy - kod (Číselník kod:StavStandardizaceAdresy) UPLNA, CASTECNA_OBEC/..., NEUSPESNA")

  public String getStavStandardizace() {
    return stavStandardizace;
  }


  public void setStavStandardizace(String stavStandardizace) {
    this.stavStandardizace = stavStandardizace;
  }


  public StandardizovaneAdresySeznam request(StandardizovanaAdresaFiltr request) {
    
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StandardizovanaAdresaFiltr getRequest() {
    return request;
  }


  public void setRequest(StandardizovanaAdresaFiltr request) {
    this.request = request;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandardizovaneAdresySeznam standardizovaneAdresySeznam = (StandardizovaneAdresySeznam) o;
    return Objects.equals(this.pocetCelkem, standardizovaneAdresySeznam.pocetCelkem) &&
        Objects.equals(this.standardizovaneAdresy, standardizovaneAdresySeznam.standardizovaneAdresy) &&
        Objects.equals(this.stavStandardizace, standardizovaneAdresySeznam.stavStandardizace) &&
        Objects.equals(this.request, standardizovaneAdresySeznam.request);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pocetCelkem, standardizovaneAdresy, stavStandardizace, request);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandardizovaneAdresySeznam {\n");
    sb.append("    pocetCelkem: ").append(toIndentedString(pocetCelkem)).append("\n");
    sb.append("    standardizovaneAdresy: ").append(toIndentedString(standardizovaneAdresy)).append("\n");
    sb.append("    stavStandardizace: ").append(toIndentedString(stavStandardizace)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pocetCelkem");
    openapiFields.add("standardizovaneAdresy");
    openapiFields.add("stavStandardizace");
    openapiFields.add("request");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to StandardizovaneAdresySeznam
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (StandardizovaneAdresySeznam.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in StandardizovaneAdresySeznam is not found in the empty JSON string", StandardizovaneAdresySeznam.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!StandardizovaneAdresySeznam.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StandardizovaneAdresySeznam` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("standardizovaneAdresy") != null && !jsonObj.get("standardizovaneAdresy").isJsonNull()) {
        JsonArray jsonArraystandardizovaneAdresy = jsonObj.getAsJsonArray("standardizovaneAdresy");
        if (jsonArraystandardizovaneAdresy != null) {
          // ensure the json data is an array
          if (!jsonObj.get("standardizovaneAdresy").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `standardizovaneAdresy` to be an array in the JSON string but got `%s`", jsonObj.get("standardizovaneAdresy").toString()));
          }

          // validate the optional field `standardizovaneAdresy` (array)
          for (int i = 0; i < jsonArraystandardizovaneAdresy.size(); i++) {
            StandardizovanaAdresa.validateJsonObject(jsonArraystandardizovaneAdresy.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("stavStandardizace") != null && !jsonObj.get("stavStandardizace").isJsonNull()) && !jsonObj.get("stavStandardizace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stavStandardizace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stavStandardizace").toString()));
      }
      // validate the optional field `request`
      if (jsonObj.get("request") != null && !jsonObj.get("request").isJsonNull()) {
        StandardizovanaAdresaFiltr.validateJsonObject(jsonObj.getAsJsonObject("request"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StandardizovaneAdresySeznam.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StandardizovaneAdresySeznam' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StandardizovaneAdresySeznam> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StandardizovaneAdresySeznam.class));

       return (TypeAdapter<T>) new TypeAdapter<StandardizovaneAdresySeznam>() {
           @Override
           public void write(JsonWriter out, StandardizovaneAdresySeznam value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StandardizovaneAdresySeznam read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StandardizovaneAdresySeznam given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StandardizovaneAdresySeznam
  * @throws IOException if the JSON string is invalid with respect to StandardizovaneAdresySeznam
  */
  public static StandardizovaneAdresySeznam fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StandardizovaneAdresySeznam.class);
  }

 /**
  * Convert an instance of StandardizovaneAdresySeznam to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

