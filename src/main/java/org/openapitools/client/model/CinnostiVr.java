/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ObecnyTextVr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Činnosti
 */
@ApiModel(description = "Činnosti")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class CinnostiVr {
  public static final String SERIALIZED_NAME_PREDMET_PODNIKANI = "predmetPodnikani";
  @SerializedName(SERIALIZED_NAME_PREDMET_PODNIKANI)
  private List<ObecnyTextVr> predmetPodnikani = null;

  public static final String SERIALIZED_NAME_DOPLNKOVA_CINNOST = "doplnkovaCinnost";
  @SerializedName(SERIALIZED_NAME_DOPLNKOVA_CINNOST)
  private List<ObecnyTextVr> doplnkovaCinnost = null;

  public static final String SERIALIZED_NAME_PREDMET_CINNOSTI = "predmetCinnosti";
  @SerializedName(SERIALIZED_NAME_PREDMET_CINNOSTI)
  private List<ObecnyTextVr> predmetCinnosti = null;

  public static final String SERIALIZED_NAME_UCEL = "ucel";
  @SerializedName(SERIALIZED_NAME_UCEL)
  private List<ObecnyTextVr> ucel = null;

  public CinnostiVr() {
  }

  public CinnostiVr predmetPodnikani(List<ObecnyTextVr> predmetPodnikani) {
    
    this.predmetPodnikani = predmetPodnikani;
    return this;
  }

  public CinnostiVr addPredmetPodnikaniItem(ObecnyTextVr predmetPodnikaniItem) {
    if (this.predmetPodnikani == null) {
      this.predmetPodnikani = new ArrayList<>();
    }
    this.predmetPodnikani.add(predmetPodnikaniItem);
    return this;
  }

   /**
   * Get predmetPodnikani
   * @return predmetPodnikani
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getPredmetPodnikani() {
    return predmetPodnikani;
  }


  public void setPredmetPodnikani(List<ObecnyTextVr> predmetPodnikani) {
    this.predmetPodnikani = predmetPodnikani;
  }


  public CinnostiVr doplnkovaCinnost(List<ObecnyTextVr> doplnkovaCinnost) {
    
    this.doplnkovaCinnost = doplnkovaCinnost;
    return this;
  }

  public CinnostiVr addDoplnkovaCinnostItem(ObecnyTextVr doplnkovaCinnostItem) {
    if (this.doplnkovaCinnost == null) {
      this.doplnkovaCinnost = new ArrayList<>();
    }
    this.doplnkovaCinnost.add(doplnkovaCinnostItem);
    return this;
  }

   /**
   * Get doplnkovaCinnost
   * @return doplnkovaCinnost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getDoplnkovaCinnost() {
    return doplnkovaCinnost;
  }


  public void setDoplnkovaCinnost(List<ObecnyTextVr> doplnkovaCinnost) {
    this.doplnkovaCinnost = doplnkovaCinnost;
  }


  public CinnostiVr predmetCinnosti(List<ObecnyTextVr> predmetCinnosti) {
    
    this.predmetCinnosti = predmetCinnosti;
    return this;
  }

  public CinnostiVr addPredmetCinnostiItem(ObecnyTextVr predmetCinnostiItem) {
    if (this.predmetCinnosti == null) {
      this.predmetCinnosti = new ArrayList<>();
    }
    this.predmetCinnosti.add(predmetCinnostiItem);
    return this;
  }

   /**
   * Get predmetCinnosti
   * @return predmetCinnosti
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getPredmetCinnosti() {
    return predmetCinnosti;
  }


  public void setPredmetCinnosti(List<ObecnyTextVr> predmetCinnosti) {
    this.predmetCinnosti = predmetCinnosti;
  }


  public CinnostiVr ucel(List<ObecnyTextVr> ucel) {
    
    this.ucel = ucel;
    return this;
  }

  public CinnostiVr addUcelItem(ObecnyTextVr ucelItem) {
    if (this.ucel == null) {
      this.ucel = new ArrayList<>();
    }
    this.ucel.add(ucelItem);
    return this;
  }

   /**
   * Get ucel
   * @return ucel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObecnyTextVr> getUcel() {
    return ucel;
  }


  public void setUcel(List<ObecnyTextVr> ucel) {
    this.ucel = ucel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CinnostiVr cinnostiVr = (CinnostiVr) o;
    return Objects.equals(this.predmetPodnikani, cinnostiVr.predmetPodnikani) &&
        Objects.equals(this.doplnkovaCinnost, cinnostiVr.doplnkovaCinnost) &&
        Objects.equals(this.predmetCinnosti, cinnostiVr.predmetCinnosti) &&
        Objects.equals(this.ucel, cinnostiVr.ucel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(predmetPodnikani, doplnkovaCinnost, predmetCinnosti, ucel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CinnostiVr {\n");
    sb.append("    predmetPodnikani: ").append(toIndentedString(predmetPodnikani)).append("\n");
    sb.append("    doplnkovaCinnost: ").append(toIndentedString(doplnkovaCinnost)).append("\n");
    sb.append("    predmetCinnosti: ").append(toIndentedString(predmetCinnosti)).append("\n");
    sb.append("    ucel: ").append(toIndentedString(ucel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("predmetPodnikani");
    openapiFields.add("doplnkovaCinnost");
    openapiFields.add("predmetCinnosti");
    openapiFields.add("ucel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CinnostiVr
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CinnostiVr.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CinnostiVr is not found in the empty JSON string", CinnostiVr.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CinnostiVr.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CinnostiVr` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("predmetPodnikani") != null && !jsonObj.get("predmetPodnikani").isJsonNull()) {
        JsonArray jsonArraypredmetPodnikani = jsonObj.getAsJsonArray("predmetPodnikani");
        if (jsonArraypredmetPodnikani != null) {
          // ensure the json data is an array
          if (!jsonObj.get("predmetPodnikani").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `predmetPodnikani` to be an array in the JSON string but got `%s`", jsonObj.get("predmetPodnikani").toString()));
          }

          // validate the optional field `predmetPodnikani` (array)
          for (int i = 0; i < jsonArraypredmetPodnikani.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArraypredmetPodnikani.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("doplnkovaCinnost") != null && !jsonObj.get("doplnkovaCinnost").isJsonNull()) {
        JsonArray jsonArraydoplnkovaCinnost = jsonObj.getAsJsonArray("doplnkovaCinnost");
        if (jsonArraydoplnkovaCinnost != null) {
          // ensure the json data is an array
          if (!jsonObj.get("doplnkovaCinnost").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `doplnkovaCinnost` to be an array in the JSON string but got `%s`", jsonObj.get("doplnkovaCinnost").toString()));
          }

          // validate the optional field `doplnkovaCinnost` (array)
          for (int i = 0; i < jsonArraydoplnkovaCinnost.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArraydoplnkovaCinnost.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("predmetCinnosti") != null && !jsonObj.get("predmetCinnosti").isJsonNull()) {
        JsonArray jsonArraypredmetCinnosti = jsonObj.getAsJsonArray("predmetCinnosti");
        if (jsonArraypredmetCinnosti != null) {
          // ensure the json data is an array
          if (!jsonObj.get("predmetCinnosti").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `predmetCinnosti` to be an array in the JSON string but got `%s`", jsonObj.get("predmetCinnosti").toString()));
          }

          // validate the optional field `predmetCinnosti` (array)
          for (int i = 0; i < jsonArraypredmetCinnosti.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArraypredmetCinnosti.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("ucel") != null && !jsonObj.get("ucel").isJsonNull()) {
        JsonArray jsonArrayucel = jsonObj.getAsJsonArray("ucel");
        if (jsonArrayucel != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ucel").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ucel` to be an array in the JSON string but got `%s`", jsonObj.get("ucel").toString()));
          }

          // validate the optional field `ucel` (array)
          for (int i = 0; i < jsonArrayucel.size(); i++) {
            ObecnyTextVr.validateJsonObject(jsonArrayucel.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CinnostiVr.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CinnostiVr' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CinnostiVr> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CinnostiVr.class));

       return (TypeAdapter<T>) new TypeAdapter<CinnostiVr>() {
           @Override
           public void write(JsonWriter out, CinnostiVr value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CinnostiVr read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CinnostiVr given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CinnostiVr
  * @throws IOException if the JSON string is invalid with respect to CinnostiVr
  */
  public static CinnostiVr fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CinnostiVr.class);
  }

 /**
  * Convert an instance of CinnostiVr to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

