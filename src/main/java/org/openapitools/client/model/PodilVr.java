/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ObnosVr;
import org.openapitools.client.model.ZastavniPravoVr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Podíl
 */
@ApiModel(description = "Podíl")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-27T00:34:55.679880400+01:00[Europe/Prague]")
public class PodilVr {
  public static final String SERIALIZED_NAME_DATUM_ZAPISU = "datumZapisu";
  @SerializedName(SERIALIZED_NAME_DATUM_ZAPISU)
  private LocalDate datumZapisu;

  public static final String SERIALIZED_NAME_DATUM_VYMAZU = "datumVymazu";
  @SerializedName(SERIALIZED_NAME_DATUM_VYMAZU)
  private LocalDate datumVymazu;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_VKLAD = "vklad";
  @SerializedName(SERIALIZED_NAME_VKLAD)
  private ObnosVr vklad;

  public static final String SERIALIZED_NAME_VELIKOST_PODILU = "velikostPodilu";
  @SerializedName(SERIALIZED_NAME_VELIKOST_PODILU)
  private ObnosVr velikostPodilu;

  public static final String SERIALIZED_NAME_SPLACENI = "splaceni";
  @SerializedName(SERIALIZED_NAME_SPLACENI)
  private ObnosVr splaceni;

  public static final String SERIALIZED_NAME_ZASTAVNI_PRAVO = "zastavniPravo";
  @SerializedName(SERIALIZED_NAME_ZASTAVNI_PRAVO)
  private List<ZastavniPravoVr> zastavniPravo = null;

  public PodilVr() {
  }

  public PodilVr datumZapisu(LocalDate datumZapisu) {
    
    this.datumZapisu = datumZapisu;
    return this;
  }

   /**
   * Datum zápisu údaje
   * @return datumZapisu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum zápisu údaje")

  public LocalDate getDatumZapisu() {
    return datumZapisu;
  }


  public void setDatumZapisu(LocalDate datumZapisu) {
    this.datumZapisu = datumZapisu;
  }


  public PodilVr datumVymazu(LocalDate datumVymazu) {
    
    this.datumVymazu = datumVymazu;
    return this;
  }

   /**
   * Datum výmazu údaje
   * @return datumVymazu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datum výmazu údaje")

  public LocalDate getDatumVymazu() {
    return datumVymazu;
  }


  public void setDatumVymazu(LocalDate datumVymazu) {
    this.datumVymazu = datumVymazu;
  }


  public PodilVr text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  public PodilVr vklad(ObnosVr vklad) {
    
    this.vklad = vklad;
    return this;
  }

   /**
   * Get vklad
   * @return vklad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObnosVr getVklad() {
    return vklad;
  }


  public void setVklad(ObnosVr vklad) {
    this.vklad = vklad;
  }


  public PodilVr velikostPodilu(ObnosVr velikostPodilu) {
    
    this.velikostPodilu = velikostPodilu;
    return this;
  }

   /**
   * Get velikostPodilu
   * @return velikostPodilu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObnosVr getVelikostPodilu() {
    return velikostPodilu;
  }


  public void setVelikostPodilu(ObnosVr velikostPodilu) {
    this.velikostPodilu = velikostPodilu;
  }


  public PodilVr splaceni(ObnosVr splaceni) {
    
    this.splaceni = splaceni;
    return this;
  }

   /**
   * Get splaceni
   * @return splaceni
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObnosVr getSplaceni() {
    return splaceni;
  }


  public void setSplaceni(ObnosVr splaceni) {
    this.splaceni = splaceni;
  }


  public PodilVr zastavniPravo(List<ZastavniPravoVr> zastavniPravo) {
    
    this.zastavniPravo = zastavniPravo;
    return this;
  }

  public PodilVr addZastavniPravoItem(ZastavniPravoVr zastavniPravoItem) {
    if (this.zastavniPravo == null) {
      this.zastavniPravo = new ArrayList<>();
    }
    this.zastavniPravo.add(zastavniPravoItem);
    return this;
  }

   /**
   * Get zastavniPravo
   * @return zastavniPravo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ZastavniPravoVr> getZastavniPravo() {
    return zastavniPravo;
  }


  public void setZastavniPravo(List<ZastavniPravoVr> zastavniPravo) {
    this.zastavniPravo = zastavniPravo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PodilVr podilVr = (PodilVr) o;
    return Objects.equals(this.datumZapisu, podilVr.datumZapisu) &&
        Objects.equals(this.datumVymazu, podilVr.datumVymazu) &&
        Objects.equals(this.text, podilVr.text) &&
        Objects.equals(this.vklad, podilVr.vklad) &&
        Objects.equals(this.velikostPodilu, podilVr.velikostPodilu) &&
        Objects.equals(this.splaceni, podilVr.splaceni) &&
        Objects.equals(this.zastavniPravo, podilVr.zastavniPravo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datumZapisu, datumVymazu, text, vklad, velikostPodilu, splaceni, zastavniPravo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PodilVr {\n");
    sb.append("    datumZapisu: ").append(toIndentedString(datumZapisu)).append("\n");
    sb.append("    datumVymazu: ").append(toIndentedString(datumVymazu)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    vklad: ").append(toIndentedString(vklad)).append("\n");
    sb.append("    velikostPodilu: ").append(toIndentedString(velikostPodilu)).append("\n");
    sb.append("    splaceni: ").append(toIndentedString(splaceni)).append("\n");
    sb.append("    zastavniPravo: ").append(toIndentedString(zastavniPravo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("datumZapisu");
    openapiFields.add("datumVymazu");
    openapiFields.add("text");
    openapiFields.add("vklad");
    openapiFields.add("velikostPodilu");
    openapiFields.add("splaceni");
    openapiFields.add("zastavniPravo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PodilVr
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PodilVr.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PodilVr is not found in the empty JSON string", PodilVr.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PodilVr.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PodilVr` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      // validate the optional field `vklad`
      if (jsonObj.get("vklad") != null && !jsonObj.get("vklad").isJsonNull()) {
        ObnosVr.validateJsonObject(jsonObj.getAsJsonObject("vklad"));
      }
      // validate the optional field `velikostPodilu`
      if (jsonObj.get("velikostPodilu") != null && !jsonObj.get("velikostPodilu").isJsonNull()) {
        ObnosVr.validateJsonObject(jsonObj.getAsJsonObject("velikostPodilu"));
      }
      // validate the optional field `splaceni`
      if (jsonObj.get("splaceni") != null && !jsonObj.get("splaceni").isJsonNull()) {
        ObnosVr.validateJsonObject(jsonObj.getAsJsonObject("splaceni"));
      }
      if (jsonObj.get("zastavniPravo") != null && !jsonObj.get("zastavniPravo").isJsonNull()) {
        JsonArray jsonArrayzastavniPravo = jsonObj.getAsJsonArray("zastavniPravo");
        if (jsonArrayzastavniPravo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("zastavniPravo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `zastavniPravo` to be an array in the JSON string but got `%s`", jsonObj.get("zastavniPravo").toString()));
          }

          // validate the optional field `zastavniPravo` (array)
          for (int i = 0; i < jsonArrayzastavniPravo.size(); i++) {
            ZastavniPravoVr.validateJsonObject(jsonArrayzastavniPravo.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PodilVr.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PodilVr' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PodilVr> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PodilVr.class));

       return (TypeAdapter<T>) new TypeAdapter<PodilVr>() {
           @Override
           public void write(JsonWriter out, PodilVr value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PodilVr read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PodilVr given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PodilVr
  * @throws IOException if the JSON string is invalid with respect to PodilVr
  */
  public static PodilVr fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PodilVr.class);
  }

 /**
  * Convert an instance of PodilVr to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

