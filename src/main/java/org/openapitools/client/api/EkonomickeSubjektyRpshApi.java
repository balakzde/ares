/*
 * ARES: REST API - veřejné
 * generováno: čtvrtek 14. prosince 2023 14:19:28, použité package:<<REST_COMMON>> DTO_COMMON,<<REST_COMMON_STRANKOVANI>> Řazení a stránkování,<<REST_COMMON_TEC>> Technické,<<REST_COMMON_TYPY>> DATOVE_TYPY_COMMON,<<REST_ARES>> EkonomickeSubjektySluzba,<<REST_ARES_DTO_COMMON>> DTO_ARES_COMMON,<<REST_VR>> EkonomickeSubjektyVrSluzba,<<REST_VR_DTO>> DTO_VR,<<REST_VR_DTO_COMMON>> DTO_VR_COMMON,<<REST_RES>> EkonomickeSubjektyResSluzba,<<REST_RES_DTO_COMMON>> DTO_RES_COMMON,<<REST_RZP>> EkonomickeSubjektyRzpSluzba,<<REST_RZP_DTO_COMMON>> DTO_RZP_COMMON,<<REST_RZP_DTO>> DTO_RZP,<<REST_NRPZS>> EkonomickeSubjektyNrpzsSluzba,<<REST_NRPZS_DTO_COMMON>> DTO_NRPZS_COMMON,<<REST_RPSH>> EkonomickeSubjektyRpshSluzba,<<REST_RPSH_DTO_COMMON>> DTO_RPSH_COMMON,<<REST_RCNS>> EkonomickeSubjektyRcnsSluzba,<<REST_RCNS_DTO_COMMON>> DTO_RCNS_COMMON,<<REST_RCNS_DTO>> DTO_RCNS,<<REST_SZR>> EkonomickeSubjektySzrSluzba,<<REST_SZR_DTO_COMMON>> REST_SZR_DTO_COMMON,<<REST_SZR_DTO>> DTO_SZR,<<REST_RS>> EkonomickeSubjektyRsSluzba,<<REST_RS_DTO_COMMON>> DTO_RS_COMMON,<<REST_RS_DTO>> DTO_RS,<<REST_CIS>> CiselnikyNazevnikySluzba,<<REST_CIS_DTO_COMMON>> DTO_CIS_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL,<<REST_RUIAN>> StandardizovaneAdresySluzba,<<REST_RUIAN_DTO_COMMON>> DTO_RUIAN_COMMON,<<REST_CEU>> EkonomickeSubjektyCeuSluzba,<<REST_CEU_DTO_COMMON>> REST_CEU_DTO_COMMON,<<REST_CEU_DTO>> DTO_CEU,<<REST_NOTIFIKACE>> EkonomickeSubjektyNotifikaceSluzba,<<REST_NOTIFIKACE_DTO_COMMON>> REST_NOTIFIKACE_DTO_COMMON,<<REST_DETAIL>> DTO_COMMON_DETAIL_NEV
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Chyba;
import org.openapitools.client.model.EkonomickeSubjektyRegistraceFiltr;
import org.openapitools.client.model.EkonomickeSubjektyRpshSeznam;
import org.openapitools.client.model.EkonomickySubjektRpsh;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class EkonomickeSubjektyRpshApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public EkonomickeSubjektyRpshApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EkonomickeSubjektyRpshApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for vratEkonomickySubjektRpsh
     * @param ico  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call vratEkonomickySubjektRpshCall(String ico, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/ekonomicke-subjekty-rpsh/{ico}"
            .replaceAll("\\{" + "ico" + "\\}", localVarApiClient.escapeString(ico.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "BearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call vratEkonomickySubjektRpshValidateBeforeCall(String ico, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'ico' is set
        if (ico == null) {
            throw new ApiException("Missing the required parameter 'ico' when calling vratEkonomickySubjektRpsh(Async)");
        }
        

        okhttp3.Call localVarCall = vratEkonomickySubjektRpshCall(ico, _callback);
        return localVarCall;

    }

    /**
     * 
     * Vyhledání konkrétního ekonomického subjektu ze zdroje RPSH
     * @param ico  (required)
     * @return EkonomickySubjektRpsh
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public EkonomickySubjektRpsh vratEkonomickySubjektRpsh(String ico) throws ApiException {
        ApiResponse<EkonomickySubjektRpsh> localVarResp = vratEkonomickySubjektRpshWithHttpInfo(ico);
        return localVarResp.getData();
    }

    /**
     * 
     * Vyhledání konkrétního ekonomického subjektu ze zdroje RPSH
     * @param ico  (required)
     * @return ApiResponse&lt;EkonomickySubjektRpsh&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EkonomickySubjektRpsh> vratEkonomickySubjektRpshWithHttpInfo(String ico) throws ApiException {
        okhttp3.Call localVarCall = vratEkonomickySubjektRpshValidateBeforeCall(ico, null);
        Type localVarReturnType = new TypeToken<EkonomickySubjektRpsh>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Vyhledání konkrétního ekonomického subjektu ze zdroje RPSH
     * @param ico  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call vratEkonomickySubjektRpshAsync(String ico, final ApiCallback<EkonomickySubjektRpsh> _callback) throws ApiException {

        okhttp3.Call localVarCall = vratEkonomickySubjektRpshValidateBeforeCall(ico, _callback);
        Type localVarReturnType = new TypeToken<EkonomickySubjektRpsh>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for vyhledejSeznamEkonomickychSubjektuRpsh
     * @param ekonomickeSubjektyRegistraceFiltr  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call vyhledejSeznamEkonomickychSubjektuRpshCall(EkonomickeSubjektyRegistraceFiltr ekonomickeSubjektyRegistraceFiltr, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = ekonomickeSubjektyRegistraceFiltr;

        // create path and map variables
        String localVarPath = "/ekonomicke-subjekty-rpsh/vyhledat";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "BearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call vyhledejSeznamEkonomickychSubjektuRpshValidateBeforeCall(EkonomickeSubjektyRegistraceFiltr ekonomickeSubjektyRegistraceFiltr, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = vyhledejSeznamEkonomickychSubjektuRpshCall(ekonomickeSubjektyRegistraceFiltr, _callback);
        return localVarCall;

    }

    /**
     * 
     * Vyhledání seznamu ekonomických subjektu ze zdroje RPSH
     * @param ekonomickeSubjektyRegistraceFiltr  (optional)
     * @return EkonomickeSubjektyRpshSeznam
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public EkonomickeSubjektyRpshSeznam vyhledejSeznamEkonomickychSubjektuRpsh(EkonomickeSubjektyRegistraceFiltr ekonomickeSubjektyRegistraceFiltr) throws ApiException {
        ApiResponse<EkonomickeSubjektyRpshSeznam> localVarResp = vyhledejSeznamEkonomickychSubjektuRpshWithHttpInfo(ekonomickeSubjektyRegistraceFiltr);
        return localVarResp.getData();
    }

    /**
     * 
     * Vyhledání seznamu ekonomických subjektu ze zdroje RPSH
     * @param ekonomickeSubjektyRegistraceFiltr  (optional)
     * @return ApiResponse&lt;EkonomickeSubjektyRpshSeznam&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EkonomickeSubjektyRpshSeznam> vyhledejSeznamEkonomickychSubjektuRpshWithHttpInfo(EkonomickeSubjektyRegistraceFiltr ekonomickeSubjektyRegistraceFiltr) throws ApiException {
        okhttp3.Call localVarCall = vyhledejSeznamEkonomickychSubjektuRpshValidateBeforeCall(ekonomickeSubjektyRegistraceFiltr, null);
        Type localVarReturnType = new TypeToken<EkonomickeSubjektyRpshSeznam>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Vyhledání seznamu ekonomických subjektu ze zdroje RPSH
     * @param ekonomickeSubjektyRegistraceFiltr  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Chyba vstupu </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Chyba autentizace </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Přístup zamítnut </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Zdroj nenalezen </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Neočekávaná chyba </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call vyhledejSeznamEkonomickychSubjektuRpshAsync(EkonomickeSubjektyRegistraceFiltr ekonomickeSubjektyRegistraceFiltr, final ApiCallback<EkonomickeSubjektyRpshSeznam> _callback) throws ApiException {

        okhttp3.Call localVarCall = vyhledejSeznamEkonomickychSubjektuRpshValidateBeforeCall(ekonomickeSubjektyRegistraceFiltr, _callback);
        Type localVarReturnType = new TypeToken<EkonomickeSubjektyRpshSeznam>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
